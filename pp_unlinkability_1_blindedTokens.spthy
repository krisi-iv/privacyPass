
// ==============================================================================
// summary of summaries:
// analyzed: pp_unlinkability_1_blindedTokens.spthy
// processing time: 21.88s
// DiffLemma:  Observational_equivalence : verified (450 steps)
// ==============================================================================

theory PrivacyPassUnlinkability1_BlindedTokens
begin
 
functions: h1/1, pow/2
 
// for 2 tokens per user, the attacker cannot distinguish between the blinded tokens of user 1 and user 2
rule 2_Usrs_send_tokens:
    let
        Usr1BlindedToken = pow(h1(~t),~r)                           // T=H(~t), blind T: T~ = T^r
        Usr1BlindedToken2 = pow(h1(~t2),~r2) 
        Usr2BlindedToken = pow(h1(~t1),~r1)
    in
    [ Fr(~t), Fr(~r), Fr(~t1), Fr(~r1), Fr(~t2), Fr(~r2)]           // the users generate fresh values for t, r, t1, r1, t2, r2, t3, r3
    --[ SendToken()]->
    [Out(<Usr1BlindedToken, diff(Usr1BlindedToken2, Usr2BlindedToken), ~t, ~t2, ~t1, h1(~t), h1(~t2), h1(~t1)>)]

end
