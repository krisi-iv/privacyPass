theory PP_model begin

// Function signature and definition of the equational theory E

functions: BlindedToken/1, CHash/1, CalcR/3, Challenge/1,
           CheckTokenSpent/2, HMAC/2, SHMac/1, SMod/1, SignedToken/1,
           SrvSignedToken/1, Store/4, Token/1, TokenSpent/3, URL/1,
           UserSolution/1, WebResources/1, blind/2, calcA/1, calcB/1, false/0,
           fst/1, h1/1, h2/2, h3/6, inverse/1, minus/2, mod/2, multiply/2,
           pair/2, pow/2, sign/2, snd/1, true/0, unblind/2, verifySolution/1
equations:
    CheckTokenSpent($Srv, t) = false,
    calcA(multiply(pow(X,
                       mod(minus(t, multiply(h3(X, Y, P, Q, Xt, Pt), k)), q)),
                   pow(pow(X, k), h3(X, Y, P, Q, Xt, Pt))))
  = Xt,
    calcB(multiply(pow(P,
                       mod(minus(t, multiply(h3(X, Y, P, Q, Xt, Pt), k)), q)),
                   pow(pow(P, k), h3(X, Y, P, Q, Xt, Pt))))
  = Pt,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    unblind(sign(blind(h1(x), r), secr_key), r)
  = sign(h1(x), secr_key),
    unblind(sign(sign(blind(h1(x), r), secr_key1), secr_key2), r)
  = sign(sign(h1(x), secr_key1), secr_key2),
    verifySolution(sol) = true



heuristic: O "privacy_pass.oracle"

restriction equality:
  "∀ #i x y. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction single_ti:
  "∀ #i #j ti Y sk1 ti2 Y2 sk2.
    ((Setup_Ti( ti, Y, sk1 ) @ #i) ∧ (Setup_Ti( ti2, Y2, sk2 ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction single_server:
  "∀ #i #j server ti Y server2 ti2 Y2.
    ((Setup_Srv( server, ti, Y ) @ #i) ∧
     (Setup_Srv( server2, ti2, Y2 ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction unique_entities:
  "∀ #i #j x role1 role2.
    ((EntityCreated( x, role1 ) @ #i) ∧
     (EntityCreated( x, role2 ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction OnlyOnce:
  "∀ p q r #i #j.
    ((OnlyOnce( p, q, r ) @ #i) ∧ (OnlyOnce( p, q, r ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

rule (modulo E) ChanOut_S:
   [ Out_S( ~chId, $A, $B, x ) ]
  --[ ChanOut_S( $A, $B, x ) ]->
   [ Sec( ~chId, $A, $B, x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ChanIn_S:
   [ Sec( ~chId, $A, $B, x ) ]
  --[ ChanIn_S( $A, $B, x ), Ti_verify_sent( ~chId, $A, $B, x ) ]->
   [ In_S( ~chId, $A, $B, x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ChanOut_Comp:
   [ In( <~chId, $A, $B, x> ) ]
  --[
  Rev( $A, 'secureChannel' ), Rev( $B, 'secureChannel' ),
  Injected( x )
  ]->
   [ Sec( ~chId, $A, $B, x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ChanIn_Comp:
   [ Sec( ~chId, $A, $B, x ) ]
  --[ Rev( $A, 'secureChannel' ), Rev( $B, 'secureChannel' ) ]->
   [ Out( <~chId, x> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Setup_Ti:
   [ Fr( X ), Fr( P ), Fr( ord ), Fr( secr_key ) ]
  --[
  Setup_Ti( $Ti, pow(X, secr_key), secr_key ),
  EntityCreated( $Ti, 'ti' ),
  Unique( <$Ti, X, pow(X, secr_key), P, pow(P, secr_key), ord, 
           secr_key>
  )
  ]->
   [
   LeakKeys( $Ti, secr_key ),
   State_Ti_setup( $Ti, X, pow(X, secr_key), P, pow(P, secr_key), ord,
                   secr_key
   ),
   State_Srv_Ti( $Ti, pow(X, secr_key) ),
   !State_Usr_Ti( $Ti, X, P, pow(P, secr_key) ), State_Ti_id( $Ti )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Setup_Srv:
   [ State_Srv_Ti( $Ti, Y ), Fr( ~Srv_id ) ]
  --[ Setup_Srv( $Srv, $Ti, Y ), EntityCreated( $Srv, 'server' ) ]->
   [
   State_Srv_setup( $Srv, $Ti, Y ), !State_Srv_Usr( $Srv, $Ti, Y ),
   !State_Srv_id( $Srv )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Setup_Usr:
   [
   !State_Usr_Ti( $Ti, X, P, Q ), !State_Srv_Usr( $Srv, $Ti, Y ),
   Fr( ~Usr_id )
   ]
  --[ Setup_Usr( $Usr, $Srv, Y ), EntityCreated( $Usr, 'user' ) ]->
   [ State_Usr_setup( $Usr, $Srv, X, P, Q ), State_Usr_id( $Usr ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Ti_leaked_signing_key:
   [ LeakKeys( $Ti, secr_key ) ]
  --[ TiLeakedKey( $Ti, secr_key ) ]->
   [ Out( secr_key ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) connect_Ti_Srv:
   [ State_Ti_id( $Ti ), !State_Srv_id( $Srv ), Fr( ~chId_srv_ti ) ]
  --[
  OnlyOnce( ~chId_srv_ti, $Ti, $Srv ),
  Unique( <~chId_srv_ti, $Ti, $Srv> )
  ]->
   [
   Srv_Ti_chan( ~chId_srv_ti, $Ti, $Srv ),
   Ti_chan( ~chId_srv_ti, $Ti, $Srv )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) connect_Usr_Srv:
   [ State_Usr_id( $Usr ), !State_Srv_id( $Srv ), Fr( ~chId_srv_usr )
   ]
  --[
  OnlyOnce( ~chId_srv_usr, $Usr, $Srv ),
  Unique( <~chId_srv_usr, $Usr, $Srv> )
  ]->
   [
   Srv_Usr_chan( ~chId_srv_usr, $Usr, $Srv ),
   Usr_chan( ~chId_srv_usr, $Usr, $Srv )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) U_request_content:
   [ Fr( ~url ), Usr_chan( ~chId_srv_usr, $Usr, $Srv ) ]
  --[
  RequestContent( $Usr, $Srv, ~url ), Unique( <$Usr, $Srv, ~url> )
  ]->
   [
   Out_S( ~chId_srv_usr, $Usr, $Srv, <'1', $Usr, URL(~url)> ),
   State_Usr_request_content( ~chId_srv_usr, $Usr, $Srv, ~url )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Srv_present_challenge:
   [
   In_S( ~chId_srv_usr, $Usr, $Srv, <'1', $Usr, URL(url)> ),
   State_Srv_setup( $Srv, $Ti, Y ), Fr( ~challenge ),
   Srv_Usr_chan( ~chId_srv_usr, $Usr, $Srv )
   ]
  --[
  SrvPresentChallenge( $Srv, $Usr, $Ti, ~challenge, url ),
  Unique( <$Srv, $Usr, $Ti, url> )
  ]->
   [
   Out_S( ~chId_srv_usr, $Srv, $Usr,
          <'2', $Srv, URL(url), Challenge(~challenge), Y>
   ),
   State_Srv_challenge( ~chId_srv_usr, $Srv, $Usr, $Ti, ~challenge,
                        url, Y
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Usr_send_solution:
   [
   In_S( ~chId_srv_usr, $Srv, $Usr,
         <'2', $Srv, URL(url), Challenge(challenge), Y>
   ),
   State_Usr_setup( $Usr, $Srv, X, P, Q ),
   State_Usr_request_content( ~chId_srv_usr, $Usr, $Srv, url ),
   Fr( ~solution ), Fr( ~t ), Fr( ~r ), Fr( ~t1 ), Fr( ~r1 ),
   Fr( ~t2 ), Fr( ~r2 )
   ]
  --[
  UsrSendSolution( $Usr, $Srv, $Ti,
                   <'3', $Usr, UserSolution(~solution), URL(url), 
                    BlindedToken(blind(h1(~t), ~r)), 
                    BlindedToken(blind(h1(~t1), ~r1)), 
                    BlindedToken(blind(h1(~t2), ~r2))>,
                   blind(h1(~t), ~r), blind(h1(~t1), ~r1), blind(h1(~t2), ~r2), url
  ),
  Unique( <$Usr, $Srv, $Ti, url, ~solution, blind(h1(~t), ~r), 
           blind(h1(~t1), ~r1), blind(h1(~t2), ~r2), ~r, ~t, ~r1, ~t1, ~r2, 
           ~t2, challenge>
  )
  ]->
   [
   Out_S( ~chId_srv_usr, $Usr, $Srv,
          <'3', $Usr, UserSolution(~solution), URL(url), 
           BlindedToken(blind(h1(~t), ~r)), 
           BlindedToken(blind(h1(~t1), ~r1)), 
           BlindedToken(blind(h1(~t2), ~r2))>
   ),
   State_Usr_solution( ~chId_srv_usr, $Usr, $Srv, url, ~t, ~r, ~t1,
                       ~r1, ~t2, ~r2, X, Y, P, Q
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Srv_rcv_solution_and_send_solution_to_Ti:
   [
   In_S( ~chId_srv_usr, $Usr, $Srv,
         <'3', $Usr, UserSolution(~solution), URL(url), 
          BlindedToken(blindedToken), BlindedToken(blindedToken1), 
          BlindedToken(blindedToken2)>
   ),
   State_Srv_challenge( ~chId_srv_usr, $Srv, $Usr, $Ti, challenge,
                        url, Y
   ),
   Srv_Ti_chan( ~chId_srv_ti, $Ti, $Srv )
   ]
  --[
  SrvForwardSolution( $Usr, $Srv, $Ti,
                      <'3', $Usr, UserSolution(~solution), URL(url), 
                       BlindedToken(blindedToken), BlindedToken(blindedToken1), 
                       BlindedToken(blindedToken2)>,
                      url
  ),
  Unique( <$Ti, $Srv, url, ~solution, blindedToken, blindedToken1, 
           blindedToken2, challenge>
  )
  ]->
   [
   Out_S( ~chId_srv_ti, $Srv, $Ti,
          <'3', $Usr, UserSolution(~solution), URL(url), 
           BlindedToken(blindedToken), BlindedToken(blindedToken1), 
           BlindedToken(blindedToken2)>
   ),
   State_Srv_solution_rcv_Ti( ~chId_srv_ti, ~chId_srv_usr, $Usr, $Srv,
                              $Ti, url, Y
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Ti_verify_solution[derivchecks]:
   [
   In_S( ~chId_srv_ti, $Srv, $Ti,
         <'3', $Usr, UserSolution(~solution), URL(url), 
          BlindedToken(blind(h1(h1t), tr)), 
          BlindedToken(blind(h1(h1t1), tr1)), 
          BlindedToken(blind(h1(h1t2), tr2))>
   ),
   Fr( ~nonceT ), State_Ti_setup( $Ti, X, Y, P, Q, ord, secr_key ),
   Ti_chan( ~chId_srv_ti, $Ti, $Srv )
   ]
  --[
  Eq( verifySolution(<'3', $Usr, UserSolution(~solution), URL(url), 
                      BlindedToken(blind(h1(h1t), tr)), 
                      BlindedToken(blind(h1(h1t1), tr1)), 
                      BlindedToken(blind(h1(h1t2), tr2))>),
      true
  ),
  TiSignBlindedTokens( $Ti,
                       <'3', $Usr, UserSolution(~solution), URL(url), 
                        BlindedToken(blind(h1(h1t), tr)), 
                        BlindedToken(blind(h1(h1t1), tr1)), 
                        BlindedToken(blind(h1(h1t2), tr2))>,
                       secr_key, sign(blind(h1(h1t), tr), secr_key),
                       sign(blind(h1(h1t1), tr1), secr_key),
                       sign(blind(h1(h1t2), tr2), secr_key)
  ),
  TiSignsToken( $Ti, h1t, secr_key ),
  TiSignsToken( $Ti, h1t1, secr_key ),
  TiSignsToken( $Ti, h1t2, secr_key )
  ]->
   [
   Out_S( ~chId_srv_ti, $Ti, $Srv,
          <'4', $Ti, URL(url), 
           SignedToken(sign(blind(h1(h1t), tr), secr_key)), 
           SignedToken(sign(blind(h1(h1t1), tr1), secr_key)), 
           SignedToken(sign(blind(h1(h1t2), tr2), secr_key)), 
           CHash(h3(X, Y, P, Q, pow(X, ~nonceT), pow(P, ~nonceT))), 
           SMod(mod(minus(~nonceT,
                          multiply(h3(X, Y, P, Q, pow(X, ~nonceT), pow(P, ~nonceT)),
                                   secr_key)),
                    ord))
          >
   ),
   !State_Ti_signedBlTok( ~chId_srv_ti, $Ti, $Srv, secr_key,
                          sign(blind(h1(h1t), tr), secr_key),
                          sign(blind(h1(h1t1), tr1), secr_key),
                          sign(blind(h1(h1t2), tr2), secr_key)
   )
   ]

  // loop breaker: [0]
  /*
  rule (modulo AC) Ti_verify_solution[derivchecks]:
     [
     In_S( ~chId_srv_ti, $Srv, $Ti,
           <'3', $Usr, UserSolution(~solution), URL(url), 
            BlindedToken(blind(h1(h1t), tr)), 
            BlindedToken(blind(h1(h1t1), tr1)), 
            BlindedToken(blind(h1(h1t2), tr2))>
     ),
     Fr( ~nonceT ), State_Ti_setup( $Ti, X, Y, P, Q, ord, secr_key ),
     Ti_chan( ~chId_srv_ti, $Ti, $Srv )
     ]
    --[
    Eq( true, true ),
    TiSignBlindedTokens( $Ti,
                         <'3', $Usr, UserSolution(~solution), URL(url), 
                          BlindedToken(blind(h1(h1t), tr)), 
                          BlindedToken(blind(h1(h1t1), tr1)), 
                          BlindedToken(blind(h1(h1t2), tr2))>,
                         secr_key, sign(blind(h1(h1t), tr), secr_key),
                         sign(blind(h1(h1t1), tr1), secr_key),
                         sign(blind(h1(h1t2), tr2), secr_key)
    ),
    TiSignsToken( $Ti, h1t, secr_key ),
    TiSignsToken( $Ti, h1t1, secr_key ),
    TiSignsToken( $Ti, h1t2, secr_key )
    ]->
     [
     Out_S( ~chId_srv_ti, $Ti, $Srv,
            <'4', $Ti, URL(url), 
             SignedToken(sign(blind(h1(h1t), tr), secr_key)), 
             SignedToken(sign(blind(h1(h1t1), tr1), secr_key)), 
             SignedToken(sign(blind(h1(h1t2), tr2), secr_key)), 
             CHash(h3(X, Y, P, Q, pow(X, ~nonceT), pow(P, ~nonceT))), 
             SMod(mod(minus(~nonceT,
                            multiply(h3(X, Y, P, Q, pow(X, ~nonceT), pow(P, ~nonceT)),
                                     secr_key)),
                      ord))
            >
     ),
     !State_Ti_signedBlTok( ~chId_srv_ti, $Ti, $Srv, secr_key,
                            sign(blind(h1(h1t), tr), secr_key),
                            sign(blind(h1(h1t1), tr1), secr_key),
                            sign(blind(h1(h1t2), tr2), secr_key)
     )
     ]
    // loop breaker: [0]
  */

rule (modulo E) Srv_forward_proof:
   [
   In_S( ~chId_srv_ti, $Ti, $Srv,
         <'4', $Ti, URL(url), SignedToken(signedBlTok), 
          SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
          SMod(s)>
   ),
   Fr( ~resource ),
   State_Srv_solution_rcv_Ti( ~chId_srv_ti, ~chId_srv_usr, $Usr, $Srv,
                              $Ti, url, Y
   )
   ]
  --[
  SrvForwardSignedBlindedTokens( $Srv, $Usr, c, s ),
  Ti_verify_rcv( ~chId_srv_ti, $Ti, $Srv,
                 <'4', $Ti, URL(url), SignedToken(signedBlTok), 
                  SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                  SMod(s)>
  )
  ]->
   [
   Out_S( ~chId_srv_usr, $Srv, $Usr,
          <'5', URL(url), SignedToken(signedBlTok), 
           SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
           SMod(s), WebResources(~resource)>
   ),
   !State_Srv_send_proof( ~chId_srv_ti, ~chId_srv_usr, $Srv, $Usr,
                          url, Y
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Usr_verify_token:
   [
   In_S( ~chId_srv_usr, $Srv, $Usr,
         <'5', URL(url), SignedToken(signedBlTok), 
          SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
          SMod(s), WebResources(resource)>
   ),
   State_Usr_solution( ~chId_srv_usr, $Usr, $Srv, url, t, r, t1, r1,
                       t2, r2, X, Y, P, Q
   )
   ]
  --[
  Eq( c,
      h3(X, Y, P, Q, calcA(multiply(pow(X, s), pow(Y, c))),
         calcB(multiply(pow(P, s), pow(Q, c))))
  ),
  UsrStoreUnblindedTokens( $Usr, $Srv, t, t1, t2,
                           unblind(signedBlTok, r), unblind(signedBlTok1, r1),
                           unblind(signedBlTok2, r2), Y
  ),
  Unique( <$Usr, $Srv, url, signedBlTok, c, s, 
           unblind(signedBlTok, r), unblind(signedBlTok1, r1), 
           unblind(signedBlTok2, r2)>
  )
  ]->
   [
   Store( ~chId_srv_usr, $Usr, $Srv, <t, r, unblind(signedBlTok, r)>
   ),
   Store( ~chId_srv_usr, $Usr, $Srv,
          <t1, r1, unblind(signedBlTok1, r1)>
   ),
   Store( ~chId_srv_usr, $Usr, $Srv,
          <t2, r2, unblind(signedBlTok2, r2)>
   )
   ]

  // loop breaker: [0]
  /*
  rule (modulo AC) Usr_verify_token:
     [
     In_S( ~chId_srv_usr, $Srv, $Usr,
           <'5', URL(url), SignedToken(signedBlTok), 
            SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
            SMod(s), WebResources(resource)>
     ),
     State_Usr_solution( ~chId_srv_usr, $Usr, $Srv, url, t, r, t1, r1,
                         t2, r2, X, Y, P, Q
     )
     ]
    --[
    Eq( c, h3(X, Y, P, Q, z.3, z.4) ),
    UsrStoreUnblindedTokens( $Usr, $Srv, t, t1, t2, z, z.1, z.2, Y ),
    Unique( <$Usr, $Srv, url, signedBlTok, c, s, z, z.1, z.2> )
    ]->
     [
     Store( ~chId_srv_usr, $Usr, $Srv, <t, r, z> ),
     Store( ~chId_srv_usr, $Usr, $Srv, <t1, r1, z.1> ),
     Store( ~chId_srv_usr, $Usr, $Srv, <t2, r2, z.2> )
     ]
    variants (modulo AC)
      1. P     = P.28
         Q     = Q.29
         X     = X.30
         Y     = Y.31
         c     = c.32
         r     = r.33
         r1    = r1.34
         r2    = r2.35
         s     = s.37
         signedBlTok
               = signedBlTok.38
         signedBlTok1
               = signedBlTok1.39
         signedBlTok2
               = signedBlTok2.40
         z     = unblind(signedBlTok.38, r.33)
         z.1   = unblind(signedBlTok1.39, r1.34)
         z.2   = unblind(signedBlTok2.40, r2.35)
         z.3   = calcA(multiply(pow(X.30, s.37), pow(Y.31, c.32)))
         z.4   = calcB(multiply(pow(P.28, s.37), pow(Q.29, c.32)))
    
      2. P     = P.35
         Q     = Q.36
         X     = X.37
         Y     = Y.38
         c     = c.39
         r     = r.40
         r1    = r1.41
         r2    = r2.42
         s     = s.44
         signedBlTok
               = signedBlTok.45
         signedBlTok1
               = signedBlTok1.46
         signedBlTok2
               = sign(blind(h1(x.63), r2.42), x.64)
         z     = unblind(signedBlTok.45, r.40)
         z.1   = unblind(signedBlTok1.46, r1.41)
         z.2   = sign(h1(x.63), x.64)
         z.3   = calcA(multiply(pow(X.37, s.44), pow(Y.38, c.39)))
         z.4   = calcB(multiply(pow(P.35, s.44), pow(Q.36, c.39)))
    
      3. P     = P.35
         Q     = Q.36
         X     = X.37
         Y     = Y.38
         c     = c.39
         r     = r.40
         r1    = r1.41
         r2    = r2.42
         s     = s.44
         signedBlTok
               = signedBlTok.45
         signedBlTok1
               = sign(blind(h1(x.63), r1.41), x.64)
         signedBlTok2
               = signedBlTok2.47
         z     = unblind(signedBlTok.45, r.40)
         z.1   = sign(h1(x.63), x.64)
         z.2   = unblind(signedBlTok2.47, r2.42)
         z.3   = calcA(multiply(pow(X.37, s.44), pow(Y.38, c.39)))
         z.4   = calcB(multiply(pow(P.35, s.44), pow(Q.36, c.39)))
    
      4. P     = P.35
         Q     = Q.36
         X     = X.37
         Y     = Y.38
         c     = c.39
         r     = r.40
         r1    = r1.41
         r2    = r2.42
         s     = s.44
         signedBlTok
               = sign(blind(h1(x.63), r.40), x.64)
         signedBlTok1
               = signedBlTok1.46
         signedBlTok2
               = signedBlTok2.47
         z     = sign(h1(x.63), x.64)
         z.1   = unblind(signedBlTok1.46, r1.41)
         z.2   = unblind(signedBlTok2.47, r2.42)
         z.3   = calcA(multiply(pow(X.37, s.44), pow(Y.38, c.39)))
         z.4   = calcB(multiply(pow(P.35, s.44), pow(Q.36, c.39)))
    
      5. P     = P.36
         Q     = Q.37
         X     = X.38
         Y     = Y.39
         c     = c.40
         r     = r.41
         r1    = r1.42
         r2    = r2.43
         s     = s.45
         signedBlTok
               = signedBlTok.46
         signedBlTok1
               = signedBlTok1.47
         signedBlTok2
               = sign(sign(blind(h1(x.64), r2.43), x.65), x.66)
         z     = unblind(signedBlTok.46, r.41)
         z.1   = unblind(signedBlTok1.47, r1.42)
         z.2   = sign(sign(h1(x.64), x.65), x.66)
         z.3   = calcA(multiply(pow(X.38, s.45), pow(Y.39, c.40)))
         z.4   = calcB(multiply(pow(P.36, s.45), pow(Q.37, c.40)))
    
      6. P     = P.36
         Q     = Q.37
         X     = X.38
         Y     = Y.39
         c     = c.40
         r     = r.41
         r1    = r1.42
         r2    = r2.43
         s     = s.45
         signedBlTok
               = signedBlTok.46
         signedBlTok1
               = sign(sign(blind(h1(x.64), r1.42), x.65), x.66)
         signedBlTok2
               = signedBlTok2.48
         z     = unblind(signedBlTok.46, r.41)
         z.1   = sign(sign(h1(x.64), x.65), x.66)
         z.2   = unblind(signedBlTok2.48, r2.43)
         z.3   = calcA(multiply(pow(X.38, s.45), pow(Y.39, c.40)))
         z.4   = calcB(multiply(pow(P.36, s.45), pow(Q.37, c.40)))
    
      7. P     = P.36
         Q     = Q.37
         X     = X.38
         Y     = Y.39
         c     = c.40
         r     = r.41
         r1    = r1.42
         r2    = r2.43
         s     = s.45
         signedBlTok
               = sign(sign(blind(h1(x.64), r.41), x.65), x.66)
         signedBlTok1
               = signedBlTok1.47
         signedBlTok2
               = signedBlTok2.48
         z     = sign(sign(h1(x.64), x.65), x.66)
         z.1   = unblind(signedBlTok1.47, r1.42)
         z.2   = unblind(signedBlTok2.48, r2.43)
         z.3   = calcA(multiply(pow(X.38, s.45), pow(Y.39, c.40)))
         z.4   = calcB(multiply(pow(P.36, s.45), pow(Q.37, c.40)))
    
      8. P     = P.37
         Q     = Q.38
         X     = X.39
         Y     = Y.40
         c     = c.41
         r     = r.42
         r1    = r1.43
         r2    = r2.44
         s     = s.46
         signedBlTok
               = signedBlTok.47
         signedBlTok1
               = sign(blind(h1(x.65), r1.43), x.66)
         signedBlTok2
               = sign(blind(h1(x.67), r2.44), x.68)
         z     = unblind(signedBlTok.47, r.42)
         z.1   = sign(h1(x.65), x.66)
         z.2   = sign(h1(x.67), x.68)
         z.3   = calcA(multiply(pow(X.39, s.46), pow(Y.40, c.41)))
         z.4   = calcB(multiply(pow(P.37, s.46), pow(Q.38, c.41)))
    
      9. P     = P.37
         Q     = Q.38
         X     = X.39
         Y     = Y.40
         c     = c.41
         r     = r.42
         r1    = r1.43
         r2    = r2.44
         s     = s.46
         signedBlTok
               = sign(blind(h1(x.65), r.42), x.66)
         signedBlTok1
               = sign(blind(h1(x.67), r1.43), x.68)
         signedBlTok2
               = signedBlTok2.49
         z     = sign(h1(x.65), x.66)
         z.1   = sign(h1(x.67), x.68)
         z.2   = unblind(signedBlTok2.49, r2.44)
         z.3   = calcA(multiply(pow(X.39, s.46), pow(Y.40, c.41)))
         z.4   = calcB(multiply(pow(P.37, s.46), pow(Q.38, c.41)))
    
     10. P     = P.38
         Q     = Q.39
         X     = X.40
         Y     = Y.41
         c     = c.42
         r     = r.43
         r1    = r1.44
         r2    = r2.45
         s     = s.47
         signedBlTok
               = signedBlTok.48
         signedBlTok1
               = sign(blind(h1(x.66), r1.44), x.67)
         signedBlTok2
               = sign(sign(blind(h1(x.68), r2.45), x.69), x.70)
         z     = unblind(signedBlTok.48, r.43)
         z.1   = sign(h1(x.66), x.67)
         z.2   = sign(sign(h1(x.68), x.69), x.70)
         z.3   = calcA(multiply(pow(X.40, s.47), pow(Y.41, c.42)))
         z.4   = calcB(multiply(pow(P.38, s.47), pow(Q.39, c.42)))
    
     11. P     = P.38
         Q     = Q.39
         X     = X.40
         Y     = Y.41
         c     = c.42
         r     = r.43
         r1    = r1.44
         r2    = r2.45
         s     = s.47
         signedBlTok
               = signedBlTok.48
         signedBlTok1
               = sign(sign(blind(h1(x.66), r1.44), x.67), x.68)
         signedBlTok2
               = sign(blind(h1(x.69), r2.45), x.70)
         z     = unblind(signedBlTok.48, r.43)
         z.1   = sign(sign(h1(x.66), x.67), x.68)
         z.2   = sign(h1(x.69), x.70)
         z.3   = calcA(multiply(pow(X.40, s.47), pow(Y.41, c.42)))
         z.4   = calcB(multiply(pow(P.38, s.47), pow(Q.39, c.42)))
    
     12. P     = P.38
         Q     = Q.39
         X     = X.40
         Y     = Y.41
         c     = c.42
         r     = r.43
         r1    = r1.44
         r2    = r2.45
         s     = s.47
         signedBlTok
               = sign(blind(h1(x.66), r.43), x.67)
         signedBlTok1
               = signedBlTok1.49
         signedBlTok2
               = sign(blind(h1(x.69), r2.45), x.70)
         z     = sign(h1(x.66), x.67)
         z.1   = unblind(signedBlTok1.49, r1.44)
         z.2   = sign(h1(x.69), x.70)
         z.3   = calcA(multiply(pow(X.40, s.47), pow(Y.41, c.42)))
         z.4   = calcB(multiply(pow(P.38, s.47), pow(Q.39, c.42)))
    
     13. P     = P.38
         Q     = Q.39
         X     = X.40
         Y     = Y.41
         c     = c.42
         r     = r.43
         r1    = r1.44
         r2    = r2.45
         s     = s.47
         signedBlTok
               = sign(blind(h1(x.66), r.43), x.67)
         signedBlTok1
               = sign(sign(blind(h1(x.68), r1.44), x.69), x.70)
         signedBlTok2
               = signedBlTok2.50
         z     = sign(h1(x.66), x.67)
         z.1   = sign(sign(h1(x.68), x.69), x.70)
         z.2   = unblind(signedBlTok2.50, r2.45)
         z.3   = calcA(multiply(pow(X.40, s.47), pow(Y.41, c.42)))
         z.4   = calcB(multiply(pow(P.38, s.47), pow(Q.39, c.42)))
    
     14. P     = P.38
         Q     = Q.39
         X     = X.40
         Y     = Y.41
         c     = c.42
         r     = r.43
         r1    = r1.44
         r2    = r2.45
         s     = s.47
         signedBlTok
               = sign(sign(blind(h1(x.66), r.43), x.67), x.68)
         signedBlTok1
               = sign(blind(h1(x.69), r1.44), x.70)
         signedBlTok2
               = signedBlTok2.50
         z     = sign(sign(h1(x.66), x.67), x.68)
         z.1   = sign(h1(x.69), x.70)
         z.2   = unblind(signedBlTok2.50, r2.45)
         z.3   = calcA(multiply(pow(X.40, s.47), pow(Y.41, c.42)))
         z.4   = calcB(multiply(pow(P.38, s.47), pow(Q.39, c.42)))
    
     15. P     = P.39
         Q     = Q.40
         X     = X.41
         Y     = Y.42
         c     = c.43
         r     = r.44
         r1    = r1.45
         r2    = r2.46
         s     = s.48
         signedBlTok
               = signedBlTok.49
         signedBlTok1
               = sign(sign(blind(h1(x.67), r1.45), x.68), x.69)
         signedBlTok2
               = sign(sign(blind(h1(x.70), r2.46), x.71), x.72)
         z     = unblind(signedBlTok.49, r.44)
         z.1   = sign(sign(h1(x.67), x.68), x.69)
         z.2   = sign(sign(h1(x.70), x.71), x.72)
         z.3   = calcA(multiply(pow(X.41, s.48), pow(Y.42, c.43)))
         z.4   = calcB(multiply(pow(P.39, s.48), pow(Q.40, c.43)))
    
     16. P     = P.39
         Q     = Q.40
         X     = X.41
         Y     = Y.42
         c     = c.43
         r     = r.44
         r1    = r1.45
         r2    = r2.46
         s     = s.48
         signedBlTok
               = sign(blind(h1(x.67), r.44), x.68)
         signedBlTok1
               = signedBlTok1.50
         signedBlTok2
               = sign(sign(blind(h1(x.70), r2.46), x.71), x.72)
         z     = sign(h1(x.67), x.68)
         z.1   = unblind(signedBlTok1.50, r1.45)
         z.2   = sign(sign(h1(x.70), x.71), x.72)
         z.3   = calcA(multiply(pow(X.41, s.48), pow(Y.42, c.43)))
         z.4   = calcB(multiply(pow(P.39, s.48), pow(Q.40, c.43)))
    
     17. P     = P.39
         Q     = Q.40
         X     = X.41
         Y     = Y.42
         c     = c.43
         r     = r.44
         r1    = r1.45
         r2    = r2.46
         s     = s.48
         signedBlTok
               = sign(blind(h1(x.67), r.44), x.68)
         signedBlTok1
               = sign(blind(h1(x.69), r1.45), x.70)
         signedBlTok2
               = sign(blind(h1(x.71), r2.46), x.72)
         z     = sign(h1(x.67), x.68)
         z.1   = sign(h1(x.69), x.70)
         z.2   = sign(h1(x.71), x.72)
         z.3   = calcA(multiply(pow(X.41, s.48), pow(Y.42, c.43)))
         z.4   = calcB(multiply(pow(P.39, s.48), pow(Q.40, c.43)))
    
     18. P     = P.39
         Q     = Q.40
         X     = X.41
         Y     = Y.42
         c     = c.43
         r     = r.44
         r1    = r1.45
         r2    = r2.46
         s     = s.48
         signedBlTok
               = sign(sign(blind(h1(x.67), r.44), x.68), x.69)
         signedBlTok1
               = signedBlTok1.50
         signedBlTok2
               = sign(blind(h1(x.71), r2.46), x.72)
         z     = sign(sign(h1(x.67), x.68), x.69)
         z.1   = unblind(signedBlTok1.50, r1.45)
         z.2   = sign(h1(x.71), x.72)
         z.3   = calcA(multiply(pow(X.41, s.48), pow(Y.42, c.43)))
         z.4   = calcB(multiply(pow(P.39, s.48), pow(Q.40, c.43)))
    
     19. P     = P.39
         Q     = Q.40
         X     = X.41
         Y     = Y.42
         c     = c.43
         r     = r.44
         r1    = r1.45
         r2    = r2.46
         s     = s.48
         signedBlTok
               = sign(sign(blind(h1(x.67), r.44), x.68), x.69)
         signedBlTok1
               = sign(sign(blind(h1(x.70), r1.45), x.71), x.72)
         signedBlTok2
               = signedBlTok2.51
         z     = sign(sign(h1(x.67), x.68), x.69)
         z.1   = sign(sign(h1(x.70), x.71), x.72)
         z.2   = unblind(signedBlTok2.51, r2.46)
         z.3   = calcA(multiply(pow(X.41, s.48), pow(Y.42, c.43)))
         z.4   = calcB(multiply(pow(P.39, s.48), pow(Q.40, c.43)))
    
     20. P     = P.40
         Q     = Q.41
         X     = X.42
         Y     = Y.43
         c     = c.44
         r     = r.45
         r1    = r1.46
         r2    = r2.47
         s     = s.49
         signedBlTok
               = sign(blind(h1(x.68), r.45), x.69)
         signedBlTok1
               = sign(blind(h1(x.70), r1.46), x.71)
         signedBlTok2
               = sign(sign(blind(h1(x.72), r2.47), x.73), x.74)
         z     = sign(h1(x.68), x.69)
         z.1   = sign(h1(x.70), x.71)
         z.2   = sign(sign(h1(x.72), x.73), x.74)
         z.3   = calcA(multiply(pow(X.42, s.49), pow(Y.43, c.44)))
         z.4   = calcB(multiply(pow(P.40, s.49), pow(Q.41, c.44)))
    
     21. P     = P.40
         Q     = Q.41
         X     = X.42
         Y     = Y.43
         c     = c.44
         r     = r.45
         r1    = r1.46
         r2    = r2.47
         s     = s.49
         signedBlTok
               = sign(blind(h1(x.68), r.45), x.69)
         signedBlTok1
               = sign(sign(blind(h1(x.70), r1.46), x.71), x.72)
         signedBlTok2
               = sign(blind(h1(x.73), r2.47), x.74)
         z     = sign(h1(x.68), x.69)
         z.1   = sign(sign(h1(x.70), x.71), x.72)
         z.2   = sign(h1(x.73), x.74)
         z.3   = calcA(multiply(pow(X.42, s.49), pow(Y.43, c.44)))
         z.4   = calcB(multiply(pow(P.40, s.49), pow(Q.41, c.44)))
    
     22. P     = P.40
         Q     = Q.41
         X     = X.42
         Y     = Y.43
         c     = c.44
         r     = r.45
         r1    = r1.46
         r2    = r2.47
         s     = s.49
         signedBlTok
               = sign(sign(blind(h1(x.68), r.45), x.69), x.70)
         signedBlTok1
               = signedBlTok1.51
         signedBlTok2
               = sign(sign(blind(h1(x.72), r2.47), x.73), x.74)
         z     = sign(sign(h1(x.68), x.69), x.70)
         z.1   = unblind(signedBlTok1.51, r1.46)
         z.2   = sign(sign(h1(x.72), x.73), x.74)
         z.3   = calcA(multiply(pow(X.42, s.49), pow(Y.43, c.44)))
         z.4   = calcB(multiply(pow(P.40, s.49), pow(Q.41, c.44)))
    
     23. P     = P.40
         Q     = Q.41
         X     = X.42
         Y     = Y.43
         c     = c.44
         r     = r.45
         r1    = r1.46
         r2    = r2.47
         s     = s.49
         signedBlTok
               = sign(sign(blind(h1(x.68), r.45), x.69), x.70)
         signedBlTok1
               = sign(blind(h1(x.71), r1.46), x.72)
         signedBlTok2
               = sign(blind(h1(x.73), r2.47), x.74)
         z     = sign(sign(h1(x.68), x.69), x.70)
         z.1   = sign(h1(x.71), x.72)
         z.2   = sign(h1(x.73), x.74)
         z.3   = calcA(multiply(pow(X.42, s.49), pow(Y.43, c.44)))
         z.4   = calcB(multiply(pow(P.40, s.49), pow(Q.41, c.44)))
    
     24. P     = P.41
         Q     = Q.42
         X     = X.43
         Y     = Y.44
         c     = c.45
         r     = r.46
         r1    = r1.47
         r2    = r2.48
         s     = s.50
         signedBlTok
               = sign(blind(h1(x.69), r.46), x.70)
         signedBlTok1
               = sign(sign(blind(h1(x.71), r1.47), x.72), x.73)
         signedBlTok2
               = sign(sign(blind(h1(x.74), r2.48), x.75), x.76)
         z     = sign(h1(x.69), x.70)
         z.1   = sign(sign(h1(x.71), x.72), x.73)
         z.2   = sign(sign(h1(x.74), x.75), x.76)
         z.3   = calcA(multiply(pow(X.43, s.50), pow(Y.44, c.45)))
         z.4   = calcB(multiply(pow(P.41, s.50), pow(Q.42, c.45)))
    
     25. P     = P.41
         Q     = Q.42
         X     = X.43
         Y     = Y.44
         c     = c.45
         r     = r.46
         r1    = r1.47
         r2    = r2.48
         s     = s.50
         signedBlTok
               = sign(sign(blind(h1(x.69), r.46), x.70), x.71)
         signedBlTok1
               = sign(blind(h1(x.72), r1.47), x.73)
         signedBlTok2
               = sign(sign(blind(h1(x.74), r2.48), x.75), x.76)
         z     = sign(sign(h1(x.69), x.70), x.71)
         z.1   = sign(h1(x.72), x.73)
         z.2   = sign(sign(h1(x.74), x.75), x.76)
         z.3   = calcA(multiply(pow(X.43, s.50), pow(Y.44, c.45)))
         z.4   = calcB(multiply(pow(P.41, s.50), pow(Q.42, c.45)))
    
     26. P     = P.41
         Q     = Q.42
         X     = X.43
         Y     = Y.44
         c     = c.45
         r     = r.46
         r1    = r1.47
         r2    = r2.48
         s     = s.50
         signedBlTok
               = sign(sign(blind(h1(x.69), r.46), x.70), x.71)
         signedBlTok1
               = sign(sign(blind(h1(x.72), r1.47), x.73), x.74)
         signedBlTok2
               = sign(blind(h1(x.75), r2.48), x.76)
         z     = sign(sign(h1(x.69), x.70), x.71)
         z.1   = sign(sign(h1(x.72), x.73), x.74)
         z.2   = sign(h1(x.75), x.76)
         z.3   = calcA(multiply(pow(X.43, s.50), pow(Y.44, c.45)))
         z.4   = calcB(multiply(pow(P.41, s.50), pow(Q.42, c.45)))
    
     27. P     = P.41
         Q     = Q.42
         X     = X.43
         Y     = pow(X.43, x.65)
         c     = h3(X.43, x.66, x.67, x.68, z.62, x.70)
         r     = r.46
         r1    = r1.47
         r2    = r2.48
         s     = mod(minus(x.75,
                           multiply(h3(X.43, x.66, x.67, x.68, z.62, x.70), x.65)),
                     x.76)
         signedBlTok
               = signedBlTok.51
         signedBlTok1
               = signedBlTok1.52
         signedBlTok2
               = signedBlTok2.53
         z     = unblind(signedBlTok.51, r.46)
         z.1   = unblind(signedBlTok1.52, r1.47)
         z.2   = unblind(signedBlTok2.53, r2.48)
         z.3   = z.62
         z.4   = calcB(multiply(pow(P.41,
                                    mod(minus(x.75,
                                              multiply(h3(X.43, x.66, x.67, x.68, z.62, x.70),
                                                       x.65)),
                                        x.76)),
                                pow(Q.42, h3(X.43, x.66, x.67, x.68, z.62, x.70))))
    
     28. P     = P.41
         Q     = pow(P.41, x.65)
         X     = X.43
         Y     = pow(X.43, x.65)
         c     = h3(X.43, x.67, P.41, x.68, z.62, z.63)
         r     = r.46
         r1    = r1.47
         r2    = r2.48
         s     = mod(minus(x.75,
                           multiply(h3(X.43, x.67, P.41, x.68, z.62, z.63), x.65)),
                     x.76)
         signedBlTok
               = signedBlTok.51
         signedBlTok1
               = signedBlTok1.52
         signedBlTok2
               = signedBlTok2.53
         z     = unblind(signedBlTok.51, r.46)
         z.1   = unblind(signedBlTok1.52, r1.47)
         z.2   = unblind(signedBlTok2.53, r2.48)
         z.3   = z.62
         z.4   = z.63
    
     29. P     = P.42
         Q     = Q.43
         X     = X.44
         Y     = Y.45
         c     = c.46
         r     = r.47
         r1    = r1.48
         r2    = r2.49
         s     = s.51
         signedBlTok
               = sign(sign(blind(h1(x.70), r.47), x.71), x.72)
         signedBlTok1
               = sign(sign(blind(h1(x.73), r1.48), x.74), x.75)
         signedBlTok2
               = sign(sign(blind(h1(x.76), r2.49), x.77), x.78)
         z     = sign(sign(h1(x.70), x.71), x.72)
         z.1   = sign(sign(h1(x.73), x.74), x.75)
         z.2   = sign(sign(h1(x.76), x.77), x.78)
         z.3   = calcA(multiply(pow(X.44, s.51), pow(Y.45, c.46)))
         z.4   = calcB(multiply(pow(P.42, s.51), pow(Q.43, c.46)))
    
     30. P     = P.43
         Q     = Q.44
         X     = X.45
         Y     = pow(X.45, x.67)
         c     = h3(X.45, x.68, x.69, x.70, z.64, x.72)
         r     = r.48
         r1    = r1.49
         r2    = r2.50
         s     = mod(minus(x.77,
                           multiply(h3(X.45, x.68, x.69, x.70, z.64, x.72), x.67)),
                     x.78)
         signedBlTok
               = sign(blind(h1(x.79), r.48), x.80)
         signedBlTok1
               = signedBlTok1.54
         signedBlTok2
               = signedBlTok2.55
         z     = sign(h1(x.79), x.80)
         z.1   = unblind(signedBlTok1.54, r1.49)
         z.2   = unblind(signedBlTok2.55, r2.50)
         z.3   = z.64
         z.4   = calcB(multiply(pow(P.43,
                                    mod(minus(x.77,
                                              multiply(h3(X.45, x.68, x.69, x.70, z.64, x.72),
                                                       x.67)),
                                        x.78)),
                                pow(Q.44, h3(X.45, x.68, x.69, x.70, z.64, x.72))))
    
     31. P     = P.43
         Q     = pow(P.43, x.67)
         X     = X.45
         Y     = Y.46
         c     = h3(x.70, x.71, P.43, x.72, x.73, z.65)
         r     = r.48
         r1    = r1.49
         r2    = r2.50
         s     = mod(minus(x.79,
                           multiply(h3(x.70, x.71, P.43, x.72, x.73, z.65), x.67)),
                     x.80)
         signedBlTok
               = signedBlTok.53
         signedBlTok1
               = signedBlTok1.54
         signedBlTok2
               = signedBlTok2.55
         z     = unblind(signedBlTok.53, r.48)
         z.1   = unblind(signedBlTok1.54, r1.49)
         z.2   = unblind(signedBlTok2.55, r2.50)
         z.3   = calcA(multiply(pow(X.45,
                                    mod(minus(x.79,
                                              multiply(h3(x.70, x.71, P.43, x.72, x.73, z.65),
                                                       x.67)),
                                        x.80)),
                                pow(Y.46, h3(x.70, x.71, P.43, x.72, x.73, z.65))))
         z.4   = z.65
    
     32. P     = P.43
         Q     = pow(P.43, x.67)
         X     = X.45
         Y     = pow(X.45, x.67)
         c     = h3(X.45, x.69, P.43, x.70, z.64, z.65)
         r     = r.48
         r1    = r1.49
         r2    = r2.50
         s     = mod(minus(x.77,
                           multiply(h3(X.45, x.69, P.43, x.70, z.64, z.65), x.67)),
                     x.78)
         signedBlTok
               = sign(blind(h1(x.79), r.48), x.80)
         signedBlTok1
               = signedBlTok1.54
         signedBlTok2
               = signedBlTok2.55
         z     = sign(h1(x.79), x.80)
         z.1   = unblind(signedBlTok1.54, r1.49)
         z.2   = unblind(signedBlTok2.55, r2.50)
         z.3   = z.64
         z.4   = z.65
    
     33. P     = P.44
         Q     = Q.45
         X     = X.46
         Y     = pow(X.46, x.68)
         c     = h3(X.46, x.69, x.70, x.71, z.65, x.73)
         r     = r.49
         r1    = r1.50
         r2    = r2.51
         s     = mod(minus(x.78,
                           multiply(h3(X.46, x.69, x.70, x.71, z.65, x.73), x.68)),
                     x.79)
         signedBlTok
               = signedBlTok.54
         signedBlTok1
               = sign(blind(h1(x.81), r1.50), x.82)
         signedBlTok2
               = signedBlTok2.56
         z     = unblind(signedBlTok.54, r.49)
         z.1   = sign(h1(x.81), x.82)
         z.2   = unblind(signedBlTok2.56, r2.51)
         z.3   = z.65
         z.4   = calcB(multiply(pow(P.44,
                                    mod(minus(x.78,
                                              multiply(h3(X.46, x.69, x.70, x.71, z.65, x.73),
                                                       x.68)),
                                        x.79)),
                                pow(Q.45, h3(X.46, x.69, x.70, x.71, z.65, x.73))))
    
     34. P     = P.44
         Q     = Q.45
         X     = X.46
         Y     = pow(X.46, x.68)
         c     = h3(X.46, x.69, x.70, x.71, z.65, x.73)
         r     = r.49
         r1    = r1.50
         r2    = r2.51
         s     = mod(minus(x.78,
                           multiply(h3(X.46, x.69, x.70, x.71, z.65, x.73), x.68)),
                     x.79)
         signedBlTok
               = sign(sign(blind(h1(x.80), r.49), x.81), x.82)
         signedBlTok1
               = signedBlTok1.55
         signedBlTok2
               = signedBlTok2.56
         z     = sign(sign(h1(x.80), x.81), x.82)
         z.1   = unblind(signedBlTok1.55, r1.50)
         z.2   = unblind(signedBlTok2.56, r2.51)
         z.3   = z.65
         z.4   = calcB(multiply(pow(P.44,
                                    mod(minus(x.78,
                                              multiply(h3(X.46, x.69, x.70, x.71, z.65, x.73),
                                                       x.68)),
                                        x.79)),
                                pow(Q.45, h3(X.46, x.69, x.70, x.71, z.65, x.73))))
    
     35. P     = P.44
         Q     = pow(P.44, x.68)
         X     = X.46
         Y     = pow(X.46, x.68)
         c     = h3(X.46, x.70, P.44, x.71, z.65, z.66)
         r     = r.49
         r1    = r1.50
         r2    = r2.51
         s     = mod(minus(x.78,
                           multiply(h3(X.46, x.70, P.44, x.71, z.65, z.66), x.68)),
                     x.79)
         signedBlTok
               = signedBlTok.54
         signedBlTok1
               = sign(blind(h1(x.81), r1.50), x.82)
         signedBlTok2
               = signedBlTok2.56
         z     = unblind(signedBlTok.54, r.49)
         z.1   = sign(h1(x.81), x.82)
         z.2   = unblind(signedBlTok2.56, r2.51)
         z.3   = z.65
         z.4   = z.66
    
     36. P     = P.44
         Q     = pow(P.44, x.68)
         X     = X.46
         Y     = pow(X.46, x.68)
         c     = h3(X.46, x.70, P.44, x.71, z.65, z.66)
         r     = r.49
         r1    = r1.50
         r2    = r2.51
         s     = mod(minus(x.78,
                           multiply(h3(X.46, x.70, P.44, x.71, z.65, z.66), x.68)),
                     x.79)
         signedBlTok
               = sign(sign(blind(h1(x.80), r.49), x.81), x.82)
         signedBlTok1
               = signedBlTok1.55
         signedBlTok2
               = signedBlTok2.56
         z     = sign(sign(h1(x.80), x.81), x.82)
         z.1   = unblind(signedBlTok1.55, r1.50)
         z.2   = unblind(signedBlTok2.56, r2.51)
         z.3   = z.65
         z.4   = z.66
    
     37. P     = P.45
         Q     = Q.46
         X     = X.47
         Y     = pow(X.47, x.69)
         c     = h3(X.47, x.70, x.71, x.72, z.66, x.74)
         r     = r.50
         r1    = r1.51
         r2    = r2.52
         s     = mod(minus(x.79,
                           multiply(h3(X.47, x.70, x.71, x.72, z.66, x.74), x.69)),
                     x.80)
         signedBlTok
               = signedBlTok.55
         signedBlTok1
               = signedBlTok1.56
         signedBlTok2
               = sign(blind(h1(x.83), r2.52), x.84)
         z     = unblind(signedBlTok.55, r.50)
         z.1   = unblind(signedBlTok1.56, r1.51)
         z.2   = sign(h1(x.83), x.84)
         z.3   = z.66
         z.4   = calcB(multiply(pow(P.45,
                                    mod(minus(x.79,
                                              multiply(h3(X.47, x.70, x.71, x.72, z.66, x.74),
                                                       x.69)),
                                        x.80)),
                                pow(Q.46, h3(X.47, x.70, x.71, x.72, z.66, x.74))))
    
     38. P     = P.45
         Q     = Q.46
         X     = X.47
         Y     = pow(X.47, x.69)
         c     = h3(X.47, x.70, x.71, x.72, z.66, x.74)
         r     = r.50
         r1    = r1.51
         r2    = r2.52
         s     = mod(minus(x.79,
                           multiply(h3(X.47, x.70, x.71, x.72, z.66, x.74), x.69)),
                     x.80)
         signedBlTok
               = signedBlTok.55
         signedBlTok1
               = sign(sign(blind(h1(x.82), r1.51), x.83), x.84)
         signedBlTok2
               = signedBlTok2.57
         z     = unblind(signedBlTok.55, r.50)
         z.1   = sign(sign(h1(x.82), x.83), x.84)
         z.2   = unblind(signedBlTok2.57, r2.52)
         z.3   = z.66
         z.4   = calcB(multiply(pow(P.45,
                                    mod(minus(x.79,
                                              multiply(h3(X.47, x.70, x.71, x.72, z.66, x.74),
                                                       x.69)),
                                        x.80)),
                                pow(Q.46, h3(X.47, x.70, x.71, x.72, z.66, x.74))))
    
     39. P     = P.45
         Q     = Q.46
         X     = X.47
         Y     = pow(X.47, x.69)
         c     = h3(X.47, x.70, x.71, x.72, z.66, x.74)
         r     = r.50
         r1    = r1.51
         r2    = r2.52
         s     = mod(minus(x.79,
                           multiply(h3(X.47, x.70, x.71, x.72, z.66, x.74), x.69)),
                     x.80)
         signedBlTok
               = sign(blind(h1(x.81), r.50), x.82)
         signedBlTok1
               = sign(blind(h1(x.83), r1.51), x.84)
         signedBlTok2
               = signedBlTok2.57
         z     = sign(h1(x.81), x.82)
         z.1   = sign(h1(x.83), x.84)
         z.2   = unblind(signedBlTok2.57, r2.52)
         z.3   = z.66
         z.4   = calcB(multiply(pow(P.45,
                                    mod(minus(x.79,
                                              multiply(h3(X.47, x.70, x.71, x.72, z.66, x.74),
                                                       x.69)),
                                        x.80)),
                                pow(Q.46, h3(X.47, x.70, x.71, x.72, z.66, x.74))))
    
     40. P     = P.45
         Q     = pow(P.45, x.69)
         X     = X.47
         Y     = Y.48
         c     = h3(x.72, x.73, P.45, x.74, x.75, z.67)
         r     = r.50
         r1    = r1.51
         r2    = r2.52
         s     = mod(minus(x.81,
                           multiply(h3(x.72, x.73, P.45, x.74, x.75, z.67), x.69)),
                     x.82)
         signedBlTok
               = sign(blind(h1(x.83), r.50), x.84)
         signedBlTok1
               = signedBlTok1.56
         signedBlTok2
               = signedBlTok2.57
         z     = sign(h1(x.83), x.84)
         z.1   = unblind(signedBlTok1.56, r1.51)
         z.2   = unblind(signedBlTok2.57, r2.52)
         z.3   = calcA(multiply(pow(X.47,
                                    mod(minus(x.81,
                                              multiply(h3(x.72, x.73, P.45, x.74, x.75, z.67),
                                                       x.69)),
                                        x.82)),
                                pow(Y.48, h3(x.72, x.73, P.45, x.74, x.75, z.67))))
         z.4   = z.67
    
     41. P     = P.45
         Q     = pow(P.45, x.69)
         X     = X.47
         Y     = pow(X.47, x.69)
         c     = h3(X.47, x.71, P.45, x.72, z.66, z.67)
         r     = r.50
         r1    = r1.51
         r2    = r2.52
         s     = mod(minus(x.79,
                           multiply(h3(X.47, x.71, P.45, x.72, z.66, z.67), x.69)),
                     x.80)
         signedBlTok
               = signedBlTok.55
         signedBlTok1
               = signedBlTok1.56
         signedBlTok2
               = sign(blind(h1(x.83), r2.52), x.84)
         z     = unblind(signedBlTok.55, r.50)
         z.1   = unblind(signedBlTok1.56, r1.51)
         z.2   = sign(h1(x.83), x.84)
         z.3   = z.66
         z.4   = z.67
    
     42. P     = P.45
         Q     = pow(P.45, x.69)
         X     = X.47
         Y     = pow(X.47, x.69)
         c     = h3(X.47, x.71, P.45, x.72, z.66, z.67)
         r     = r.50
         r1    = r1.51
         r2    = r2.52
         s     = mod(minus(x.79,
                           multiply(h3(X.47, x.71, P.45, x.72, z.66, z.67), x.69)),
                     x.80)
         signedBlTok
               = signedBlTok.55
         signedBlTok1
               = sign(sign(blind(h1(x.82), r1.51), x.83), x.84)
         signedBlTok2
               = signedBlTok2.57
         z     = unblind(signedBlTok.55, r.50)
         z.1   = sign(sign(h1(x.82), x.83), x.84)
         z.2   = unblind(signedBlTok2.57, r2.52)
         z.3   = z.66
         z.4   = z.67
    
     43. P     = P.45
         Q     = pow(P.45, x.69)
         X     = X.47
         Y     = pow(X.47, x.69)
         c     = h3(X.47, x.71, P.45, x.72, z.66, z.67)
         r     = r.50
         r1    = r1.51
         r2    = r2.52
         s     = mod(minus(x.79,
                           multiply(h3(X.47, x.71, P.45, x.72, z.66, z.67), x.69)),
                     x.80)
         signedBlTok
               = sign(blind(h1(x.81), r.50), x.82)
         signedBlTok1
               = sign(blind(h1(x.83), r1.51), x.84)
         signedBlTok2
               = signedBlTok2.57
         z     = sign(h1(x.81), x.82)
         z.1   = sign(h1(x.83), x.84)
         z.2   = unblind(signedBlTok2.57, r2.52)
         z.3   = z.66
         z.4   = z.67
    
     44. P     = P.46
         Q     = Q.47
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.71, x.72, x.73, z.67, x.75)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75), x.70)),
                     x.81)
         signedBlTok
               = signedBlTok.56
         signedBlTok1
               = signedBlTok1.57
         signedBlTok2
               = sign(sign(blind(h1(x.84), r2.53), x.85), x.86)
         z     = unblind(signedBlTok.56, r.51)
         z.1   = unblind(signedBlTok1.57, r1.52)
         z.2   = sign(sign(h1(x.84), x.85), x.86)
         z.3   = z.67
         z.4   = calcB(multiply(pow(P.46,
                                    mod(minus(x.80,
                                              multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75),
                                                       x.70)),
                                        x.81)),
                                pow(Q.47, h3(X.48, x.71, x.72, x.73, z.67, x.75))))
    
     45. P     = P.46
         Q     = Q.47
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.71, x.72, x.73, z.67, x.75)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75), x.70)),
                     x.81)
         signedBlTok
               = signedBlTok.56
         signedBlTok1
               = sign(blind(h1(x.83), r1.52), x.84)
         signedBlTok2
               = sign(blind(h1(x.85), r2.53), x.86)
         z     = unblind(signedBlTok.56, r.51)
         z.1   = sign(h1(x.83), x.84)
         z.2   = sign(h1(x.85), x.86)
         z.3   = z.67
         z.4   = calcB(multiply(pow(P.46,
                                    mod(minus(x.80,
                                              multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75),
                                                       x.70)),
                                        x.81)),
                                pow(Q.47, h3(X.48, x.71, x.72, x.73, z.67, x.75))))
    
     46. P     = P.46
         Q     = Q.47
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.71, x.72, x.73, z.67, x.75)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75), x.70)),
                     x.81)
         signedBlTok
               = sign(blind(h1(x.82), r.51), x.83)
         signedBlTok1
               = signedBlTok1.57
         signedBlTok2
               = sign(blind(h1(x.85), r2.53), x.86)
         z     = sign(h1(x.82), x.83)
         z.1   = unblind(signedBlTok1.57, r1.52)
         z.2   = sign(h1(x.85), x.86)
         z.3   = z.67
         z.4   = calcB(multiply(pow(P.46,
                                    mod(minus(x.80,
                                              multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75),
                                                       x.70)),
                                        x.81)),
                                pow(Q.47, h3(X.48, x.71, x.72, x.73, z.67, x.75))))
    
     47. P     = P.46
         Q     = Q.47
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.71, x.72, x.73, z.67, x.75)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75), x.70)),
                     x.81)
         signedBlTok
               = sign(blind(h1(x.82), r.51), x.83)
         signedBlTok1
               = sign(sign(blind(h1(x.84), r1.52), x.85), x.86)
         signedBlTok2
               = signedBlTok2.58
         z     = sign(h1(x.82), x.83)
         z.1   = sign(sign(h1(x.84), x.85), x.86)
         z.2   = unblind(signedBlTok2.58, r2.53)
         z.3   = z.67
         z.4   = calcB(multiply(pow(P.46,
                                    mod(minus(x.80,
                                              multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75),
                                                       x.70)),
                                        x.81)),
                                pow(Q.47, h3(X.48, x.71, x.72, x.73, z.67, x.75))))
    
     48. P     = P.46
         Q     = Q.47
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.71, x.72, x.73, z.67, x.75)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75), x.70)),
                     x.81)
         signedBlTok
               = sign(sign(blind(h1(x.82), r.51), x.83), x.84)
         signedBlTok1
               = sign(blind(h1(x.85), r1.52), x.86)
         signedBlTok2
               = signedBlTok2.58
         z     = sign(sign(h1(x.82), x.83), x.84)
         z.1   = sign(h1(x.85), x.86)
         z.2   = unblind(signedBlTok2.58, r2.53)
         z.3   = z.67
         z.4   = calcB(multiply(pow(P.46,
                                    mod(minus(x.80,
                                              multiply(h3(X.48, x.71, x.72, x.73, z.67, x.75),
                                                       x.70)),
                                        x.81)),
                                pow(Q.47, h3(X.48, x.71, x.72, x.73, z.67, x.75))))
    
     49. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = Y.49
         c     = h3(x.73, x.74, P.46, x.75, x.76, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.82,
                           multiply(h3(x.73, x.74, P.46, x.75, x.76, z.68), x.70)),
                     x.83)
         signedBlTok
               = signedBlTok.56
         signedBlTok1
               = sign(blind(h1(x.85), r1.52), x.86)
         signedBlTok2
               = signedBlTok2.58
         z     = unblind(signedBlTok.56, r.51)
         z.1   = sign(h1(x.85), x.86)
         z.2   = unblind(signedBlTok2.58, r2.53)
         z.3   = calcA(multiply(pow(X.48,
                                    mod(minus(x.82,
                                              multiply(h3(x.73, x.74, P.46, x.75, x.76, z.68),
                                                       x.70)),
                                        x.83)),
                                pow(Y.49, h3(x.73, x.74, P.46, x.75, x.76, z.68))))
         z.4   = z.68
    
     50. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = Y.49
         c     = h3(x.73, x.74, P.46, x.75, x.76, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.82,
                           multiply(h3(x.73, x.74, P.46, x.75, x.76, z.68), x.70)),
                     x.83)
         signedBlTok
               = sign(sign(blind(h1(x.84), r.51), x.85), x.86)
         signedBlTok1
               = signedBlTok1.57
         signedBlTok2
               = signedBlTok2.58
         z     = sign(sign(h1(x.84), x.85), x.86)
         z.1   = unblind(signedBlTok1.57, r1.52)
         z.2   = unblind(signedBlTok2.58, r2.53)
         z.3   = calcA(multiply(pow(X.48,
                                    mod(minus(x.82,
                                              multiply(h3(x.73, x.74, P.46, x.75, x.76, z.68),
                                                       x.70)),
                                        x.83)),
                                pow(Y.49, h3(x.73, x.74, P.46, x.75, x.76, z.68))))
         z.4   = z.68
    
     51. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.72, P.46, x.73, z.67, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.72, P.46, x.73, z.67, z.68), x.70)),
                     x.81)
         signedBlTok
               = signedBlTok.56
         signedBlTok1
               = signedBlTok1.57
         signedBlTok2
               = sign(sign(blind(h1(x.84), r2.53), x.85), x.86)
         z     = unblind(signedBlTok.56, r.51)
         z.1   = unblind(signedBlTok1.57, r1.52)
         z.2   = sign(sign(h1(x.84), x.85), x.86)
         z.3   = z.67
         z.4   = z.68
    
     52. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.72, P.46, x.73, z.67, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.72, P.46, x.73, z.67, z.68), x.70)),
                     x.81)
         signedBlTok
               = signedBlTok.56
         signedBlTok1
               = sign(blind(h1(x.83), r1.52), x.84)
         signedBlTok2
               = sign(blind(h1(x.85), r2.53), x.86)
         z     = unblind(signedBlTok.56, r.51)
         z.1   = sign(h1(x.83), x.84)
         z.2   = sign(h1(x.85), x.86)
         z.3   = z.67
         z.4   = z.68
    
     53. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.72, P.46, x.73, z.67, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.72, P.46, x.73, z.67, z.68), x.70)),
                     x.81)
         signedBlTok
               = sign(blind(h1(x.82), r.51), x.83)
         signedBlTok1
               = signedBlTok1.57
         signedBlTok2
               = sign(blind(h1(x.85), r2.53), x.86)
         z     = sign(h1(x.82), x.83)
         z.1   = unblind(signedBlTok1.57, r1.52)
         z.2   = sign(h1(x.85), x.86)
         z.3   = z.67
         z.4   = z.68
    
     54. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.72, P.46, x.73, z.67, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.72, P.46, x.73, z.67, z.68), x.70)),
                     x.81)
         signedBlTok
               = sign(blind(h1(x.82), r.51), x.83)
         signedBlTok1
               = sign(blind(h1(x.84), r1.52), x.85)
         signedBlTok2
               = sign(blind(h1(x.86), r2.53), x.87)
         z     = sign(h1(x.82), x.83)
         z.1   = sign(h1(x.84), x.85)
         z.2   = sign(h1(x.86), x.87)
         z.3   = z.67
         z.4   = z.68
    
     55. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.72, P.46, x.73, z.67, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.72, P.46, x.73, z.67, z.68), x.70)),
                     x.81)
         signedBlTok
               = sign(blind(h1(x.82), r.51), x.83)
         signedBlTok1
               = sign(sign(blind(h1(x.84), r1.52), x.85), x.86)
         signedBlTok2
               = signedBlTok2.58
         z     = sign(h1(x.82), x.83)
         z.1   = sign(sign(h1(x.84), x.85), x.86)
         z.2   = unblind(signedBlTok2.58, r2.53)
         z.3   = z.67
         z.4   = z.68
    
     56. P     = P.46
         Q     = pow(P.46, x.70)
         X     = X.48
         Y     = pow(X.48, x.70)
         c     = h3(X.48, x.72, P.46, x.73, z.67, z.68)
         r     = r.51
         r1    = r1.52
         r2    = r2.53
         s     = mod(minus(x.80,
                           multiply(h3(X.48, x.72, P.46, x.73, z.67, z.68), x.70)),
                     x.81)
         signedBlTok
               = sign(sign(blind(h1(x.82), r.51), x.83), x.84)
         signedBlTok1
               = sign(blind(h1(x.85), r1.52), x.86)
         signedBlTok2
               = signedBlTok2.58
         z     = sign(sign(h1(x.82), x.83), x.84)
         z.1   = sign(h1(x.85), x.86)
         z.2   = unblind(signedBlTok2.58, r2.53)
         z.3   = z.67
         z.4   = z.68
    
     57. P     = P.47
         Q     = Q.48
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.72, x.73, x.74, z.68, x.76)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76), x.71)),
                     x.82)
         signedBlTok
               = signedBlTok.57
         signedBlTok1
               = sign(blind(h1(x.84), r1.53), x.85)
         signedBlTok2
               = sign(sign(blind(h1(x.86), r2.54), x.87), x.88)
         z     = unblind(signedBlTok.57, r.52)
         z.1   = sign(h1(x.84), x.85)
         z.2   = sign(sign(h1(x.86), x.87), x.88)
         z.3   = z.68
         z.4   = calcB(multiply(pow(P.47,
                                    mod(minus(x.81,
                                              multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76),
                                                       x.71)),
                                        x.82)),
                                pow(Q.48, h3(X.49, x.72, x.73, x.74, z.68, x.76))))
    
     58. P     = P.47
         Q     = Q.48
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.72, x.73, x.74, z.68, x.76)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76), x.71)),
                     x.82)
         signedBlTok
               = signedBlTok.57
         signedBlTok1
               = sign(sign(blind(h1(x.84), r1.53), x.85), x.86)
         signedBlTok2
               = sign(blind(h1(x.87), r2.54), x.88)
         z     = unblind(signedBlTok.57, r.52)
         z.1   = sign(sign(h1(x.84), x.85), x.86)
         z.2   = sign(h1(x.87), x.88)
         z.3   = z.68
         z.4   = calcB(multiply(pow(P.47,
                                    mod(minus(x.81,
                                              multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76),
                                                       x.71)),
                                        x.82)),
                                pow(Q.48, h3(X.49, x.72, x.73, x.74, z.68, x.76))))
    
     59. P     = P.47
         Q     = Q.48
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.72, x.73, x.74, z.68, x.76)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76), x.71)),
                     x.82)
         signedBlTok
               = sign(blind(h1(x.83), r.52), x.84)
         signedBlTok1
               = signedBlTok1.58
         signedBlTok2
               = sign(sign(blind(h1(x.86), r2.54), x.87), x.88)
         z     = sign(h1(x.83), x.84)
         z.1   = unblind(signedBlTok1.58, r1.53)
         z.2   = sign(sign(h1(x.86), x.87), x.88)
         z.3   = z.68
         z.4   = calcB(multiply(pow(P.47,
                                    mod(minus(x.81,
                                              multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76),
                                                       x.71)),
                                        x.82)),
                                pow(Q.48, h3(X.49, x.72, x.73, x.74, z.68, x.76))))
    
     60. P     = P.47
         Q     = Q.48
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.72, x.73, x.74, z.68, x.76)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76), x.71)),
                     x.82)
         signedBlTok
               = sign(blind(h1(x.83), r.52), x.84)
         signedBlTok1
               = sign(blind(h1(x.85), r1.53), x.86)
         signedBlTok2
               = sign(blind(h1(x.87), r2.54), x.88)
         z     = sign(h1(x.83), x.84)
         z.1   = sign(h1(x.85), x.86)
         z.2   = sign(h1(x.87), x.88)
         z.3   = z.68
         z.4   = calcB(multiply(pow(P.47,
                                    mod(minus(x.81,
                                              multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76),
                                                       x.71)),
                                        x.82)),
                                pow(Q.48, h3(X.49, x.72, x.73, x.74, z.68, x.76))))
    
     61. P     = P.47
         Q     = Q.48
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.72, x.73, x.74, z.68, x.76)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76), x.71)),
                     x.82)
         signedBlTok
               = sign(sign(blind(h1(x.83), r.52), x.84), x.85)
         signedBlTok1
               = signedBlTok1.58
         signedBlTok2
               = sign(blind(h1(x.87), r2.54), x.88)
         z     = sign(sign(h1(x.83), x.84), x.85)
         z.1   = unblind(signedBlTok1.58, r1.53)
         z.2   = sign(h1(x.87), x.88)
         z.3   = z.68
         z.4   = calcB(multiply(pow(P.47,
                                    mod(minus(x.81,
                                              multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76),
                                                       x.71)),
                                        x.82)),
                                pow(Q.48, h3(X.49, x.72, x.73, x.74, z.68, x.76))))
    
     62. P     = P.47
         Q     = Q.48
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.72, x.73, x.74, z.68, x.76)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76), x.71)),
                     x.82)
         signedBlTok
               = sign(sign(blind(h1(x.83), r.52), x.84), x.85)
         signedBlTok1
               = sign(sign(blind(h1(x.86), r1.53), x.87), x.88)
         signedBlTok2
               = signedBlTok2.59
         z     = sign(sign(h1(x.83), x.84), x.85)
         z.1   = sign(sign(h1(x.86), x.87), x.88)
         z.2   = unblind(signedBlTok2.59, r2.54)
         z.3   = z.68
         z.4   = calcB(multiply(pow(P.47,
                                    mod(minus(x.81,
                                              multiply(h3(X.49, x.72, x.73, x.74, z.68, x.76),
                                                       x.71)),
                                        x.82)),
                                pow(Q.48, h3(X.49, x.72, x.73, x.74, z.68, x.76))))
    
     63. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = Y.50
         c     = h3(x.74, x.75, P.47, x.76, x.77, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.83,
                           multiply(h3(x.74, x.75, P.47, x.76, x.77, z.69), x.71)),
                     x.84)
         signedBlTok
               = signedBlTok.57
         signedBlTok1
               = signedBlTok1.58
         signedBlTok2
               = sign(blind(h1(x.87), r2.54), x.88)
         z     = unblind(signedBlTok.57, r.52)
         z.1   = unblind(signedBlTok1.58, r1.53)
         z.2   = sign(h1(x.87), x.88)
         z.3   = calcA(multiply(pow(X.49,
                                    mod(minus(x.83,
                                              multiply(h3(x.74, x.75, P.47, x.76, x.77, z.69),
                                                       x.71)),
                                        x.84)),
                                pow(Y.50, h3(x.74, x.75, P.47, x.76, x.77, z.69))))
         z.4   = z.69
    
     64. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = Y.50
         c     = h3(x.74, x.75, P.47, x.76, x.77, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.83,
                           multiply(h3(x.74, x.75, P.47, x.76, x.77, z.69), x.71)),
                     x.84)
         signedBlTok
               = signedBlTok.57
         signedBlTok1
               = sign(sign(blind(h1(x.86), r1.53), x.87), x.88)
         signedBlTok2
               = signedBlTok2.59
         z     = unblind(signedBlTok.57, r.52)
         z.1   = sign(sign(h1(x.86), x.87), x.88)
         z.2   = unblind(signedBlTok2.59, r2.54)
         z.3   = calcA(multiply(pow(X.49,
                                    mod(minus(x.83,
                                              multiply(h3(x.74, x.75, P.47, x.76, x.77, z.69),
                                                       x.71)),
                                        x.84)),
                                pow(Y.50, h3(x.74, x.75, P.47, x.76, x.77, z.69))))
         z.4   = z.69
    
     65. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = Y.50
         c     = h3(x.74, x.75, P.47, x.76, x.77, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.83,
                           multiply(h3(x.74, x.75, P.47, x.76, x.77, z.69), x.71)),
                     x.84)
         signedBlTok
               = sign(blind(h1(x.85), r.52), x.86)
         signedBlTok1
               = sign(blind(h1(x.87), r1.53), x.88)
         signedBlTok2
               = signedBlTok2.59
         z     = sign(h1(x.85), x.86)
         z.1   = sign(h1(x.87), x.88)
         z.2   = unblind(signedBlTok2.59, r2.54)
         z.3   = calcA(multiply(pow(X.49,
                                    mod(minus(x.83,
                                              multiply(h3(x.74, x.75, P.47, x.76, x.77, z.69),
                                                       x.71)),
                                        x.84)),
                                pow(Y.50, h3(x.74, x.75, P.47, x.76, x.77, z.69))))
         z.4   = z.69
    
     66. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = signedBlTok.57
         signedBlTok1
               = sign(blind(h1(x.84), r1.53), x.85)
         signedBlTok2
               = sign(sign(blind(h1(x.86), r2.54), x.87), x.88)
         z     = unblind(signedBlTok.57, r.52)
         z.1   = sign(h1(x.84), x.85)
         z.2   = sign(sign(h1(x.86), x.87), x.88)
         z.3   = z.68
         z.4   = z.69
    
     67. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = signedBlTok.57
         signedBlTok1
               = sign(sign(blind(h1(x.84), r1.53), x.85), x.86)
         signedBlTok2
               = sign(blind(h1(x.87), r2.54), x.88)
         z     = unblind(signedBlTok.57, r.52)
         z.1   = sign(sign(h1(x.84), x.85), x.86)
         z.2   = sign(h1(x.87), x.88)
         z.3   = z.68
         z.4   = z.69
    
     68. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = sign(blind(h1(x.83), r.52), x.84)
         signedBlTok1
               = signedBlTok1.58
         signedBlTok2
               = sign(sign(blind(h1(x.86), r2.54), x.87), x.88)
         z     = sign(h1(x.83), x.84)
         z.1   = unblind(signedBlTok1.58, r1.53)
         z.2   = sign(sign(h1(x.86), x.87), x.88)
         z.3   = z.68
         z.4   = z.69
    
     69. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = sign(blind(h1(x.83), r.52), x.84)
         signedBlTok1
               = sign(blind(h1(x.85), r1.53), x.86)
         signedBlTok2
               = sign(sign(blind(h1(x.87), r2.54), x.88), x.89)
         z     = sign(h1(x.83), x.84)
         z.1   = sign(h1(x.85), x.86)
         z.2   = sign(sign(h1(x.87), x.88), x.89)
         z.3   = z.68
         z.4   = z.69
    
     70. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = sign(blind(h1(x.83), r.52), x.84)
         signedBlTok1
               = sign(sign(blind(h1(x.85), r1.53), x.86), x.87)
         signedBlTok2
               = sign(blind(h1(x.88), r2.54), x.89)
         z     = sign(h1(x.83), x.84)
         z.1   = sign(sign(h1(x.85), x.86), x.87)
         z.2   = sign(h1(x.88), x.89)
         z.3   = z.68
         z.4   = z.69
    
     71. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = sign(sign(blind(h1(x.83), r.52), x.84), x.85)
         signedBlTok1
               = signedBlTok1.58
         signedBlTok2
               = sign(blind(h1(x.87), r2.54), x.88)
         z     = sign(sign(h1(x.83), x.84), x.85)
         z.1   = unblind(signedBlTok1.58, r1.53)
         z.2   = sign(h1(x.87), x.88)
         z.3   = z.68
         z.4   = z.69
    
     72. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = sign(sign(blind(h1(x.83), r.52), x.84), x.85)
         signedBlTok1
               = sign(blind(h1(x.86), r1.53), x.87)
         signedBlTok2
               = sign(blind(h1(x.88), r2.54), x.89)
         z     = sign(sign(h1(x.83), x.84), x.85)
         z.1   = sign(h1(x.86), x.87)
         z.2   = sign(h1(x.88), x.89)
         z.3   = z.68
         z.4   = z.69
    
     73. P     = P.47
         Q     = pow(P.47, x.71)
         X     = X.49
         Y     = pow(X.49, x.71)
         c     = h3(X.49, x.73, P.47, x.74, z.68, z.69)
         r     = r.52
         r1    = r1.53
         r2    = r2.54
         s     = mod(minus(x.81,
                           multiply(h3(X.49, x.73, P.47, x.74, z.68, z.69), x.71)),
                     x.82)
         signedBlTok
               = sign(sign(blind(h1(x.83), r.52), x.84), x.85)
         signedBlTok1
               = sign(sign(blind(h1(x.86), r1.53), x.87), x.88)
         signedBlTok2
               = signedBlTok2.59
         z     = sign(sign(h1(x.83), x.84), x.85)
         z.1   = sign(sign(h1(x.86), x.87), x.88)
         z.2   = unblind(signedBlTok2.59, r2.54)
         z.3   = z.68
         z.4   = z.69
    
     74. P     = P.48
         Q     = Q.49
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.73, x.74, x.75, z.69, x.77)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77), x.72)),
                     x.83)
         signedBlTok
               = signedBlTok.58
         signedBlTok1
               = sign(sign(blind(h1(x.85), r1.54), x.86), x.87)
         signedBlTok2
               = sign(sign(blind(h1(x.88), r2.55), x.89), x.90)
         z     = unblind(signedBlTok.58, r.53)
         z.1   = sign(sign(h1(x.85), x.86), x.87)
         z.2   = sign(sign(h1(x.88), x.89), x.90)
         z.3   = z.69
         z.4   = calcB(multiply(pow(P.48,
                                    mod(minus(x.82,
                                              multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77),
                                                       x.72)),
                                        x.83)),
                                pow(Q.49, h3(X.50, x.73, x.74, x.75, z.69, x.77))))
    
     75. P     = P.48
         Q     = Q.49
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.73, x.74, x.75, z.69, x.77)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77), x.72)),
                     x.83)
         signedBlTok
               = sign(blind(h1(x.84), r.53), x.85)
         signedBlTok1
               = sign(blind(h1(x.86), r1.54), x.87)
         signedBlTok2
               = sign(sign(blind(h1(x.88), r2.55), x.89), x.90)
         z     = sign(h1(x.84), x.85)
         z.1   = sign(h1(x.86), x.87)
         z.2   = sign(sign(h1(x.88), x.89), x.90)
         z.3   = z.69
         z.4   = calcB(multiply(pow(P.48,
                                    mod(minus(x.82,
                                              multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77),
                                                       x.72)),
                                        x.83)),
                                pow(Q.49, h3(X.50, x.73, x.74, x.75, z.69, x.77))))
    
     76. P     = P.48
         Q     = Q.49
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.73, x.74, x.75, z.69, x.77)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77), x.72)),
                     x.83)
         signedBlTok
               = sign(blind(h1(x.84), r.53), x.85)
         signedBlTok1
               = sign(sign(blind(h1(x.86), r1.54), x.87), x.88)
         signedBlTok2
               = sign(blind(h1(x.89), r2.55), x.90)
         z     = sign(h1(x.84), x.85)
         z.1   = sign(sign(h1(x.86), x.87), x.88)
         z.2   = sign(h1(x.89), x.90)
         z.3   = z.69
         z.4   = calcB(multiply(pow(P.48,
                                    mod(minus(x.82,
                                              multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77),
                                                       x.72)),
                                        x.83)),
                                pow(Q.49, h3(X.50, x.73, x.74, x.75, z.69, x.77))))
    
     77. P     = P.48
         Q     = Q.49
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.73, x.74, x.75, z.69, x.77)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77), x.72)),
                     x.83)
         signedBlTok
               = sign(sign(blind(h1(x.84), r.53), x.85), x.86)
         signedBlTok1
               = signedBlTok1.59
         signedBlTok2
               = sign(sign(blind(h1(x.88), r2.55), x.89), x.90)
         z     = sign(sign(h1(x.84), x.85), x.86)
         z.1   = unblind(signedBlTok1.59, r1.54)
         z.2   = sign(sign(h1(x.88), x.89), x.90)
         z.3   = z.69
         z.4   = calcB(multiply(pow(P.48,
                                    mod(minus(x.82,
                                              multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77),
                                                       x.72)),
                                        x.83)),
                                pow(Q.49, h3(X.50, x.73, x.74, x.75, z.69, x.77))))
    
     78. P     = P.48
         Q     = Q.49
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.73, x.74, x.75, z.69, x.77)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77), x.72)),
                     x.83)
         signedBlTok
               = sign(sign(blind(h1(x.84), r.53), x.85), x.86)
         signedBlTok1
               = sign(blind(h1(x.87), r1.54), x.88)
         signedBlTok2
               = sign(blind(h1(x.89), r2.55), x.90)
         z     = sign(sign(h1(x.84), x.85), x.86)
         z.1   = sign(h1(x.87), x.88)
         z.2   = sign(h1(x.89), x.90)
         z.3   = z.69
         z.4   = calcB(multiply(pow(P.48,
                                    mod(minus(x.82,
                                              multiply(h3(X.50, x.73, x.74, x.75, z.69, x.77),
                                                       x.72)),
                                        x.83)),
                                pow(Q.49, h3(X.50, x.73, x.74, x.75, z.69, x.77))))
    
     79. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = Y.51
         c     = h3(x.75, x.76, P.48, x.77, x.78, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.84,
                           multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70), x.72)),
                     x.85)
         signedBlTok
               = signedBlTok.58
         signedBlTok1
               = signedBlTok1.59
         signedBlTok2
               = sign(sign(blind(h1(x.88), r2.55), x.89), x.90)
         z     = unblind(signedBlTok.58, r.53)
         z.1   = unblind(signedBlTok1.59, r1.54)
         z.2   = sign(sign(h1(x.88), x.89), x.90)
         z.3   = calcA(multiply(pow(X.50,
                                    mod(minus(x.84,
                                              multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70),
                                                       x.72)),
                                        x.85)),
                                pow(Y.51, h3(x.75, x.76, P.48, x.77, x.78, z.70))))
         z.4   = z.70
    
     80. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = Y.51
         c     = h3(x.75, x.76, P.48, x.77, x.78, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.84,
                           multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70), x.72)),
                     x.85)
         signedBlTok
               = signedBlTok.58
         signedBlTok1
               = sign(blind(h1(x.87), r1.54), x.88)
         signedBlTok2
               = sign(blind(h1(x.89), r2.55), x.90)
         z     = unblind(signedBlTok.58, r.53)
         z.1   = sign(h1(x.87), x.88)
         z.2   = sign(h1(x.89), x.90)
         z.3   = calcA(multiply(pow(X.50,
                                    mod(minus(x.84,
                                              multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70),
                                                       x.72)),
                                        x.85)),
                                pow(Y.51, h3(x.75, x.76, P.48, x.77, x.78, z.70))))
         z.4   = z.70
    
     81. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = Y.51
         c     = h3(x.75, x.76, P.48, x.77, x.78, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.84,
                           multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70), x.72)),
                     x.85)
         signedBlTok
               = sign(blind(h1(x.86), r.53), x.87)
         signedBlTok1
               = signedBlTok1.59
         signedBlTok2
               = sign(blind(h1(x.89), r2.55), x.90)
         z     = sign(h1(x.86), x.87)
         z.1   = unblind(signedBlTok1.59, r1.54)
         z.2   = sign(h1(x.89), x.90)
         z.3   = calcA(multiply(pow(X.50,
                                    mod(minus(x.84,
                                              multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70),
                                                       x.72)),
                                        x.85)),
                                pow(Y.51, h3(x.75, x.76, P.48, x.77, x.78, z.70))))
         z.4   = z.70
    
     82. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = Y.51
         c     = h3(x.75, x.76, P.48, x.77, x.78, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.84,
                           multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70), x.72)),
                     x.85)
         signedBlTok
               = sign(blind(h1(x.86), r.53), x.87)
         signedBlTok1
               = sign(sign(blind(h1(x.88), r1.54), x.89), x.90)
         signedBlTok2
               = signedBlTok2.60
         z     = sign(h1(x.86), x.87)
         z.1   = sign(sign(h1(x.88), x.89), x.90)
         z.2   = unblind(signedBlTok2.60, r2.55)
         z.3   = calcA(multiply(pow(X.50,
                                    mod(minus(x.84,
                                              multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70),
                                                       x.72)),
                                        x.85)),
                                pow(Y.51, h3(x.75, x.76, P.48, x.77, x.78, z.70))))
         z.4   = z.70
    
     83. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = Y.51
         c     = h3(x.75, x.76, P.48, x.77, x.78, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.84,
                           multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70), x.72)),
                     x.85)
         signedBlTok
               = sign(sign(blind(h1(x.86), r.53), x.87), x.88)
         signedBlTok1
               = sign(blind(h1(x.89), r1.54), x.90)
         signedBlTok2
               = signedBlTok2.60
         z     = sign(sign(h1(x.86), x.87), x.88)
         z.1   = sign(h1(x.89), x.90)
         z.2   = unblind(signedBlTok2.60, r2.55)
         z.3   = calcA(multiply(pow(X.50,
                                    mod(minus(x.84,
                                              multiply(h3(x.75, x.76, P.48, x.77, x.78, z.70),
                                                       x.72)),
                                        x.85)),
                                pow(Y.51, h3(x.75, x.76, P.48, x.77, x.78, z.70))))
         z.4   = z.70
    
     84. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.74, P.48, x.75, z.69, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.74, P.48, x.75, z.69, z.70), x.72)),
                     x.83)
         signedBlTok
               = signedBlTok.58
         signedBlTok1
               = sign(sign(blind(h1(x.85), r1.54), x.86), x.87)
         signedBlTok2
               = sign(sign(blind(h1(x.88), r2.55), x.89), x.90)
         z     = unblind(signedBlTok.58, r.53)
         z.1   = sign(sign(h1(x.85), x.86), x.87)
         z.2   = sign(sign(h1(x.88), x.89), x.90)
         z.3   = z.69
         z.4   = z.70
    
     85. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.74, P.48, x.75, z.69, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.74, P.48, x.75, z.69, z.70), x.72)),
                     x.83)
         signedBlTok
               = sign(blind(h1(x.84), r.53), x.85)
         signedBlTok1
               = sign(sign(blind(h1(x.86), r1.54), x.87), x.88)
         signedBlTok2
               = sign(sign(blind(h1(x.89), r2.55), x.90), x.91)
         z     = sign(h1(x.84), x.85)
         z.1   = sign(sign(h1(x.86), x.87), x.88)
         z.2   = sign(sign(h1(x.89), x.90), x.91)
         z.3   = z.69
         z.4   = z.70
    
     86. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.74, P.48, x.75, z.69, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.74, P.48, x.75, z.69, z.70), x.72)),
                     x.83)
         signedBlTok
               = sign(sign(blind(h1(x.84), r.53), x.85), x.86)
         signedBlTok1
               = signedBlTok1.59
         signedBlTok2
               = sign(sign(blind(h1(x.88), r2.55), x.89), x.90)
         z     = sign(sign(h1(x.84), x.85), x.86)
         z.1   = unblind(signedBlTok1.59, r1.54)
         z.2   = sign(sign(h1(x.88), x.89), x.90)
         z.3   = z.69
         z.4   = z.70
    
     87. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.74, P.48, x.75, z.69, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.74, P.48, x.75, z.69, z.70), x.72)),
                     x.83)
         signedBlTok
               = sign(sign(blind(h1(x.84), r.53), x.85), x.86)
         signedBlTok1
               = sign(blind(h1(x.87), r1.54), x.88)
         signedBlTok2
               = sign(sign(blind(h1(x.89), r2.55), x.90), x.91)
         z     = sign(sign(h1(x.84), x.85), x.86)
         z.1   = sign(h1(x.87), x.88)
         z.2   = sign(sign(h1(x.89), x.90), x.91)
         z.3   = z.69
         z.4   = z.70
    
     88. P     = P.48
         Q     = pow(P.48, x.72)
         X     = X.50
         Y     = pow(X.50, x.72)
         c     = h3(X.50, x.74, P.48, x.75, z.69, z.70)
         r     = r.53
         r1    = r1.54
         r2    = r2.55
         s     = mod(minus(x.82,
                           multiply(h3(X.50, x.74, P.48, x.75, z.69, z.70), x.72)),
                     x.83)
         signedBlTok
               = sign(sign(blind(h1(x.84), r.53), x.85), x.86)
         signedBlTok1
               = sign(sign(blind(h1(x.87), r1.54), x.88), x.89)
         signedBlTok2
               = sign(blind(h1(x.90), r2.55), x.91)
         z     = sign(sign(h1(x.84), x.85), x.86)
         z.1   = sign(sign(h1(x.87), x.88), x.89)
         z.2   = sign(h1(x.90), x.91)
         z.3   = z.69
         z.4   = z.70
    
     89. P     = P.49
         Q     = Q.50
         X     = X.51
         Y     = pow(X.51, x.73)
         c     = h3(X.51, x.74, x.75, x.76, z.70, x.78)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.83,
                           multiply(h3(X.51, x.74, x.75, x.76, z.70, x.78), x.73)),
                     x.84)
         signedBlTok
               = sign(blind(h1(x.85), r.54), x.86)
         signedBlTok1
               = sign(sign(blind(h1(x.87), r1.55), x.88), x.89)
         signedBlTok2
               = sign(sign(blind(h1(x.90), r2.56), x.91), x.92)
         z     = sign(h1(x.85), x.86)
         z.1   = sign(sign(h1(x.87), x.88), x.89)
         z.2   = sign(sign(h1(x.90), x.91), x.92)
         z.3   = z.70
         z.4   = calcB(multiply(pow(P.49,
                                    mod(minus(x.83,
                                              multiply(h3(X.51, x.74, x.75, x.76, z.70, x.78),
                                                       x.73)),
                                        x.84)),
                                pow(Q.50, h3(X.51, x.74, x.75, x.76, z.70, x.78))))
    
     90. P     = P.49
         Q     = Q.50
         X     = X.51
         Y     = pow(X.51, x.73)
         c     = h3(X.51, x.74, x.75, x.76, z.70, x.78)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.83,
                           multiply(h3(X.51, x.74, x.75, x.76, z.70, x.78), x.73)),
                     x.84)
         signedBlTok
               = sign(sign(blind(h1(x.85), r.54), x.86), x.87)
         signedBlTok1
               = sign(blind(h1(x.88), r1.55), x.89)
         signedBlTok2
               = sign(sign(blind(h1(x.90), r2.56), x.91), x.92)
         z     = sign(sign(h1(x.85), x.86), x.87)
         z.1   = sign(h1(x.88), x.89)
         z.2   = sign(sign(h1(x.90), x.91), x.92)
         z.3   = z.70
         z.4   = calcB(multiply(pow(P.49,
                                    mod(minus(x.83,
                                              multiply(h3(X.51, x.74, x.75, x.76, z.70, x.78),
                                                       x.73)),
                                        x.84)),
                                pow(Q.50, h3(X.51, x.74, x.75, x.76, z.70, x.78))))
    
     91. P     = P.49
         Q     = Q.50
         X     = X.51
         Y     = pow(X.51, x.73)
         c     = h3(X.51, x.74, x.75, x.76, z.70, x.78)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.83,
                           multiply(h3(X.51, x.74, x.75, x.76, z.70, x.78), x.73)),
                     x.84)
         signedBlTok
               = sign(sign(blind(h1(x.85), r.54), x.86), x.87)
         signedBlTok1
               = sign(sign(blind(h1(x.88), r1.55), x.89), x.90)
         signedBlTok2
               = sign(blind(h1(x.91), r2.56), x.92)
         z     = sign(sign(h1(x.85), x.86), x.87)
         z.1   = sign(sign(h1(x.88), x.89), x.90)
         z.2   = sign(h1(x.91), x.92)
         z.3   = z.70
         z.4   = calcB(multiply(pow(P.49,
                                    mod(minus(x.83,
                                              multiply(h3(X.51, x.74, x.75, x.76, z.70, x.78),
                                                       x.73)),
                                        x.84)),
                                pow(Q.50, h3(X.51, x.74, x.75, x.76, z.70, x.78))))
    
     92. P     = P.49
         Q     = pow(P.49, x.73)
         X     = X.51
         Y     = Y.52
         c     = h3(x.76, x.77, P.49, x.78, x.79, z.71)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.85,
                           multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71), x.73)),
                     x.86)
         signedBlTok
               = signedBlTok.59
         signedBlTok1
               = sign(blind(h1(x.88), r1.55), x.89)
         signedBlTok2
               = sign(sign(blind(h1(x.90), r2.56), x.91), x.92)
         z     = unblind(signedBlTok.59, r.54)
         z.1   = sign(h1(x.88), x.89)
         z.2   = sign(sign(h1(x.90), x.91), x.92)
         z.3   = calcA(multiply(pow(X.51,
                                    mod(minus(x.85,
                                              multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71),
                                                       x.73)),
                                        x.86)),
                                pow(Y.52, h3(x.76, x.77, P.49, x.78, x.79, z.71))))
         z.4   = z.71
    
     93. P     = P.49
         Q     = pow(P.49, x.73)
         X     = X.51
         Y     = Y.52
         c     = h3(x.76, x.77, P.49, x.78, x.79, z.71)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.85,
                           multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71), x.73)),
                     x.86)
         signedBlTok
               = signedBlTok.59
         signedBlTok1
               = sign(sign(blind(h1(x.88), r1.55), x.89), x.90)
         signedBlTok2
               = sign(blind(h1(x.91), r2.56), x.92)
         z     = unblind(signedBlTok.59, r.54)
         z.1   = sign(sign(h1(x.88), x.89), x.90)
         z.2   = sign(h1(x.91), x.92)
         z.3   = calcA(multiply(pow(X.51,
                                    mod(minus(x.85,
                                              multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71),
                                                       x.73)),
                                        x.86)),
                                pow(Y.52, h3(x.76, x.77, P.49, x.78, x.79, z.71))))
         z.4   = z.71
    
     94. P     = P.49
         Q     = pow(P.49, x.73)
         X     = X.51
         Y     = Y.52
         c     = h3(x.76, x.77, P.49, x.78, x.79, z.71)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.85,
                           multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71), x.73)),
                     x.86)
         signedBlTok
               = sign(blind(h1(x.87), r.54), x.88)
         signedBlTok1
               = signedBlTok1.60
         signedBlTok2
               = sign(sign(blind(h1(x.90), r2.56), x.91), x.92)
         z     = sign(h1(x.87), x.88)
         z.1   = unblind(signedBlTok1.60, r1.55)
         z.2   = sign(sign(h1(x.90), x.91), x.92)
         z.3   = calcA(multiply(pow(X.51,
                                    mod(minus(x.85,
                                              multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71),
                                                       x.73)),
                                        x.86)),
                                pow(Y.52, h3(x.76, x.77, P.49, x.78, x.79, z.71))))
         z.4   = z.71
    
     95. P     = P.49
         Q     = pow(P.49, x.73)
         X     = X.51
         Y     = Y.52
         c     = h3(x.76, x.77, P.49, x.78, x.79, z.71)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.85,
                           multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71), x.73)),
                     x.86)
         signedBlTok
               = sign(blind(h1(x.87), r.54), x.88)
         signedBlTok1
               = sign(blind(h1(x.89), r1.55), x.90)
         signedBlTok2
               = sign(blind(h1(x.91), r2.56), x.92)
         z     = sign(h1(x.87), x.88)
         z.1   = sign(h1(x.89), x.90)
         z.2   = sign(h1(x.91), x.92)
         z.3   = calcA(multiply(pow(X.51,
                                    mod(minus(x.85,
                                              multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71),
                                                       x.73)),
                                        x.86)),
                                pow(Y.52, h3(x.76, x.77, P.49, x.78, x.79, z.71))))
         z.4   = z.71
    
     96. P     = P.49
         Q     = pow(P.49, x.73)
         X     = X.51
         Y     = Y.52
         c     = h3(x.76, x.77, P.49, x.78, x.79, z.71)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.85,
                           multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71), x.73)),
                     x.86)
         signedBlTok
               = sign(sign(blind(h1(x.87), r.54), x.88), x.89)
         signedBlTok1
               = signedBlTok1.60
         signedBlTok2
               = sign(blind(h1(x.91), r2.56), x.92)
         z     = sign(sign(h1(x.87), x.88), x.89)
         z.1   = unblind(signedBlTok1.60, r1.55)
         z.2   = sign(h1(x.91), x.92)
         z.3   = calcA(multiply(pow(X.51,
                                    mod(minus(x.85,
                                              multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71),
                                                       x.73)),
                                        x.86)),
                                pow(Y.52, h3(x.76, x.77, P.49, x.78, x.79, z.71))))
         z.4   = z.71
    
     97. P     = P.49
         Q     = pow(P.49, x.73)
         X     = X.51
         Y     = Y.52
         c     = h3(x.76, x.77, P.49, x.78, x.79, z.71)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.85,
                           multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71), x.73)),
                     x.86)
         signedBlTok
               = sign(sign(blind(h1(x.87), r.54), x.88), x.89)
         signedBlTok1
               = sign(sign(blind(h1(x.90), r1.55), x.91), x.92)
         signedBlTok2
               = signedBlTok2.61
         z     = sign(sign(h1(x.87), x.88), x.89)
         z.1   = sign(sign(h1(x.90), x.91), x.92)
         z.2   = unblind(signedBlTok2.61, r2.56)
         z.3   = calcA(multiply(pow(X.51,
                                    mod(minus(x.85,
                                              multiply(h3(x.76, x.77, P.49, x.78, x.79, z.71),
                                                       x.73)),
                                        x.86)),
                                pow(Y.52, h3(x.76, x.77, P.49, x.78, x.79, z.71))))
         z.4   = z.71
    
     98. P     = P.49
         Q     = pow(P.49, x.73)
         X     = X.51
         Y     = pow(X.51, x.73)
         c     = h3(X.51, x.75, P.49, x.76, z.70, z.71)
         r     = r.54
         r1    = r1.55
         r2    = r2.56
         s     = mod(minus(x.83,
                           multiply(h3(X.51, x.75, P.49, x.76, z.70, z.71), x.73)),
                     x.84)
         signedBlTok
               = sign(sign(blind(h1(x.85), r.54), x.86), x.87)
         signedBlTok1
               = sign(sign(blind(h1(x.88), r1.55), x.89), x.90)
         signedBlTok2
               = sign(sign(blind(h1(x.91), r2.56), x.92), x.93)
         z     = sign(sign(h1(x.85), x.86), x.87)
         z.1   = sign(sign(h1(x.88), x.89), x.90)
         z.2   = sign(sign(h1(x.91), x.92), x.93)
         z.3   = z.70
         z.4   = z.71
    
     99. P     = P.50
         Q     = Q.51
         X     = X.52
         Y     = pow(X.52, x.74)
         c     = h3(X.52, x.75, x.76, x.77, z.71, x.79)
         r     = r.55
         r1    = r1.56
         r2    = r2.57
         s     = mod(minus(x.84,
                           multiply(h3(X.52, x.75, x.76, x.77, z.71, x.79), x.74)),
                     x.85)
         signedBlTok
               = sign(sign(blind(h1(x.86), r.55), x.87), x.88)
         signedBlTok1
               = sign(sign(blind(h1(x.89), r1.56), x.90), x.91)
         signedBlTok2
               = sign(sign(blind(h1(x.92), r2.57), x.93), x.94)
         z     = sign(sign(h1(x.86), x.87), x.88)
         z.1   = sign(sign(h1(x.89), x.90), x.91)
         z.2   = sign(sign(h1(x.92), x.93), x.94)
         z.3   = z.71
         z.4   = calcB(multiply(pow(P.50,
                                    mod(minus(x.84,
                                              multiply(h3(X.52, x.75, x.76, x.77, z.71, x.79),
                                                       x.74)),
                                        x.85)),
                                pow(Q.51, h3(X.52, x.75, x.76, x.77, z.71, x.79))))
    
    100. P     = P.50
         Q     = pow(P.50, x.74)
         X     = X.52
         Y     = Y.53
         c     = h3(x.77, x.78, P.50, x.79, x.80, z.72)
         r     = r.55
         r1    = r1.56
         r2    = r2.57
         s     = mod(minus(x.86,
                           multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72), x.74)),
                     x.87)
         signedBlTok
               = signedBlTok.60
         signedBlTok1
               = sign(sign(blind(h1(x.89), r1.56), x.90), x.91)
         signedBlTok2
               = sign(sign(blind(h1(x.92), r2.57), x.93), x.94)
         z     = unblind(signedBlTok.60, r.55)
         z.1   = sign(sign(h1(x.89), x.90), x.91)
         z.2   = sign(sign(h1(x.92), x.93), x.94)
         z.3   = calcA(multiply(pow(X.52,
                                    mod(minus(x.86,
                                              multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72),
                                                       x.74)),
                                        x.87)),
                                pow(Y.53, h3(x.77, x.78, P.50, x.79, x.80, z.72))))
         z.4   = z.72
    
    101. P     = P.50
         Q     = pow(P.50, x.74)
         X     = X.52
         Y     = Y.53
         c     = h3(x.77, x.78, P.50, x.79, x.80, z.72)
         r     = r.55
         r1    = r1.56
         r2    = r2.57
         s     = mod(minus(x.86,
                           multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72), x.74)),
                     x.87)
         signedBlTok
               = sign(blind(h1(x.88), r.55), x.89)
         signedBlTok1
               = sign(blind(h1(x.90), r1.56), x.91)
         signedBlTok2
               = sign(sign(blind(h1(x.92), r2.57), x.93), x.94)
         z     = sign(h1(x.88), x.89)
         z.1   = sign(h1(x.90), x.91)
         z.2   = sign(sign(h1(x.92), x.93), x.94)
         z.3   = calcA(multiply(pow(X.52,
                                    mod(minus(x.86,
                                              multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72),
                                                       x.74)),
                                        x.87)),
                                pow(Y.53, h3(x.77, x.78, P.50, x.79, x.80, z.72))))
         z.4   = z.72
    
    102. P     = P.50
         Q     = pow(P.50, x.74)
         X     = X.52
         Y     = Y.53
         c     = h3(x.77, x.78, P.50, x.79, x.80, z.72)
         r     = r.55
         r1    = r1.56
         r2    = r2.57
         s     = mod(minus(x.86,
                           multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72), x.74)),
                     x.87)
         signedBlTok
               = sign(blind(h1(x.88), r.55), x.89)
         signedBlTok1
               = sign(sign(blind(h1(x.90), r1.56), x.91), x.92)
         signedBlTok2
               = sign(blind(h1(x.93), r2.57), x.94)
         z     = sign(h1(x.88), x.89)
         z.1   = sign(sign(h1(x.90), x.91), x.92)
         z.2   = sign(h1(x.93), x.94)
         z.3   = calcA(multiply(pow(X.52,
                                    mod(minus(x.86,
                                              multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72),
                                                       x.74)),
                                        x.87)),
                                pow(Y.53, h3(x.77, x.78, P.50, x.79, x.80, z.72))))
         z.4   = z.72
    
    103. P     = P.50
         Q     = pow(P.50, x.74)
         X     = X.52
         Y     = Y.53
         c     = h3(x.77, x.78, P.50, x.79, x.80, z.72)
         r     = r.55
         r1    = r1.56
         r2    = r2.57
         s     = mod(minus(x.86,
                           multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72), x.74)),
                     x.87)
         signedBlTok
               = sign(sign(blind(h1(x.88), r.55), x.89), x.90)
         signedBlTok1
               = signedBlTok1.61
         signedBlTok2
               = sign(sign(blind(h1(x.92), r2.57), x.93), x.94)
         z     = sign(sign(h1(x.88), x.89), x.90)
         z.1   = unblind(signedBlTok1.61, r1.56)
         z.2   = sign(sign(h1(x.92), x.93), x.94)
         z.3   = calcA(multiply(pow(X.52,
                                    mod(minus(x.86,
                                              multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72),
                                                       x.74)),
                                        x.87)),
                                pow(Y.53, h3(x.77, x.78, P.50, x.79, x.80, z.72))))
         z.4   = z.72
    
    104. P     = P.50
         Q     = pow(P.50, x.74)
         X     = X.52
         Y     = Y.53
         c     = h3(x.77, x.78, P.50, x.79, x.80, z.72)
         r     = r.55
         r1    = r1.56
         r2    = r2.57
         s     = mod(minus(x.86,
                           multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72), x.74)),
                     x.87)
         signedBlTok
               = sign(sign(blind(h1(x.88), r.55), x.89), x.90)
         signedBlTok1
               = sign(blind(h1(x.91), r1.56), x.92)
         signedBlTok2
               = sign(blind(h1(x.93), r2.57), x.94)
         z     = sign(sign(h1(x.88), x.89), x.90)
         z.1   = sign(h1(x.91), x.92)
         z.2   = sign(h1(x.93), x.94)
         z.3   = calcA(multiply(pow(X.52,
                                    mod(minus(x.86,
                                              multiply(h3(x.77, x.78, P.50, x.79, x.80, z.72),
                                                       x.74)),
                                        x.87)),
                                pow(Y.53, h3(x.77, x.78, P.50, x.79, x.80, z.72))))
         z.4   = z.72
    
    105. P     = P.51
         Q     = pow(P.51, x.75)
         X     = X.53
         Y     = Y.54
         c     = h3(x.78, x.79, P.51, x.80, x.81, z.73)
         r     = r.56
         r1    = r1.57
         r2    = r2.58
         s     = mod(minus(x.87,
                           multiply(h3(x.78, x.79, P.51, x.80, x.81, z.73), x.75)),
                     x.88)
         signedBlTok
               = sign(blind(h1(x.89), r.56), x.90)
         signedBlTok1
               = sign(sign(blind(h1(x.91), r1.57), x.92), x.93)
         signedBlTok2
               = sign(sign(blind(h1(x.94), r2.58), x.95), x.96)
         z     = sign(h1(x.89), x.90)
         z.1   = sign(sign(h1(x.91), x.92), x.93)
         z.2   = sign(sign(h1(x.94), x.95), x.96)
         z.3   = calcA(multiply(pow(X.53,
                                    mod(minus(x.87,
                                              multiply(h3(x.78, x.79, P.51, x.80, x.81, z.73),
                                                       x.75)),
                                        x.88)),
                                pow(Y.54, h3(x.78, x.79, P.51, x.80, x.81, z.73))))
         z.4   = z.73
    
    106. P     = P.51
         Q     = pow(P.51, x.75)
         X     = X.53
         Y     = Y.54
         c     = h3(x.78, x.79, P.51, x.80, x.81, z.73)
         r     = r.56
         r1    = r1.57
         r2    = r2.58
         s     = mod(minus(x.87,
                           multiply(h3(x.78, x.79, P.51, x.80, x.81, z.73), x.75)),
                     x.88)
         signedBlTok
               = sign(sign(blind(h1(x.89), r.56), x.90), x.91)
         signedBlTok1
               = sign(blind(h1(x.92), r1.57), x.93)
         signedBlTok2
               = sign(sign(blind(h1(x.94), r2.58), x.95), x.96)
         z     = sign(sign(h1(x.89), x.90), x.91)
         z.1   = sign(h1(x.92), x.93)
         z.2   = sign(sign(h1(x.94), x.95), x.96)
         z.3   = calcA(multiply(pow(X.53,
                                    mod(minus(x.87,
                                              multiply(h3(x.78, x.79, P.51, x.80, x.81, z.73),
                                                       x.75)),
                                        x.88)),
                                pow(Y.54, h3(x.78, x.79, P.51, x.80, x.81, z.73))))
         z.4   = z.73
    
    107. P     = P.51
         Q     = pow(P.51, x.75)
         X     = X.53
         Y     = Y.54
         c     = h3(x.78, x.79, P.51, x.80, x.81, z.73)
         r     = r.56
         r1    = r1.57
         r2    = r2.58
         s     = mod(minus(x.87,
                           multiply(h3(x.78, x.79, P.51, x.80, x.81, z.73), x.75)),
                     x.88)
         signedBlTok
               = sign(sign(blind(h1(x.89), r.56), x.90), x.91)
         signedBlTok1
               = sign(sign(blind(h1(x.92), r1.57), x.93), x.94)
         signedBlTok2
               = sign(blind(h1(x.95), r2.58), x.96)
         z     = sign(sign(h1(x.89), x.90), x.91)
         z.1   = sign(sign(h1(x.92), x.93), x.94)
         z.2   = sign(h1(x.95), x.96)
         z.3   = calcA(multiply(pow(X.53,
                                    mod(minus(x.87,
                                              multiply(h3(x.78, x.79, P.51, x.80, x.81, z.73),
                                                       x.75)),
                                        x.88)),
                                pow(Y.54, h3(x.78, x.79, P.51, x.80, x.81, z.73))))
         z.4   = z.73
    
    108. P     = P.52
         Q     = pow(P.52, x.76)
         X     = X.54
         Y     = Y.55
         c     = h3(x.79, x.80, P.52, x.81, x.82, z.74)
         r     = r.57
         r1    = r1.58
         r2    = r2.59
         s     = mod(minus(x.88,
                           multiply(h3(x.79, x.80, P.52, x.81, x.82, z.74), x.76)),
                     x.89)
         signedBlTok
               = sign(sign(blind(h1(x.90), r.57), x.91), x.92)
         signedBlTok1
               = sign(sign(blind(h1(x.93), r1.58), x.94), x.95)
         signedBlTok2
               = sign(sign(blind(h1(x.96), r2.59), x.97), x.98)
         z     = sign(sign(h1(x.90), x.91), x.92)
         z.1   = sign(sign(h1(x.93), x.94), x.95)
         z.2   = sign(sign(h1(x.96), x.97), x.98)
         z.3   = calcA(multiply(pow(X.54,
                                    mod(minus(x.88,
                                              multiply(h3(x.79, x.80, P.52, x.81, x.82, z.74),
                                                       x.76)),
                                        x.89)),
                                pow(Y.55, h3(x.79, x.80, P.52, x.81, x.82, z.74))))
         z.4   = z.74
    // loop breaker: [0]
  */

rule (modulo E) Usr_send_request:
   [
   Store( ~chId_srv_usr, $Usr, $Srv, <t, r, unblinded> ),
   Fr( ~request )
   ]
  --[ UsrSendRequest( $Usr, $Srv, ~request, t ) ]->
   [
   Out_S( ~chId_srv_usr, $Usr, $Srv, <'6', $Usr, URL(~request)> ),
   State_Usr_request_token( ~chId_srv_usr, $Usr, $Srv, t, unblinded,
                            ~request
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Srv_send_new_challenge:
   [
   In_S( ~chId_srv_usr, $Usr, $Srv, <'6', $Usr, URL(request)> ),
   !State_Srv_send_proof( ~chId_srv_ti, ~chId_srv_usr, $Srv, $Usr,
                          url, Y
   ),
   Fr( ~newChlg )
   ]
  --[
  SrvPresentNewChallenge( $Srv, $Usr, ~newChlg ),
  Unique( <$Srv, $Usr, ~newChlg> )
  ]->
   [
   Out_S( ~chId_srv_usr, $Srv, $Usr,
          <'7', $Srv, Challenge(~newChlg), Y>
   ),
   State_Srv_challenge_new( ~chId_srv_ti, ~chId_srv_usr, $Srv, $Usr,
                            ~newChlg, url, request
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Usr_send_stored_token:
   [
   In_S( ~chId_srv_usr, $Srv, $Usr, <'7', $Srv, Challenge(newChlg), Y>
   ),
   State_Usr_request_token( ~chId_srv_usr, $Usr, $Srv, t, unblinded,
                            request
   )
   ]
  --[
  Unique( <$Usr, $Srv, t, unblinded> ),
  UsrSendStoredToken( $Usr, $Srv, t, unblinded ),
  Usr_token_send( ~chId_srv_usr, $Usr, $Srv,
                  <'8', $Usr, Challenge(newChlg), URL(request), Token(t), 
                   SHMac(HMAC(h2(t, unblinded), CalcR($Usr, $Ti, request)))>
  )
  ]->
   [
   Out_S( ~chId_srv_usr, $Usr, $Srv,
          <'8', $Usr, Challenge(newChlg), URL(request), Token(t), 
           SHMac(HMAC(h2(t, unblinded), CalcR($Usr, $Ti, request)))>
   ),
   State_Usr_send_stored_token( ~chId_srv_usr, $Usr, $Srv, request, t
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Srv_forward_stored_token:
   [
   In_S( ~chId_srv_usr, $Usr, $Srv,
         <'8', $Usr, Challenge(newChlg), URL(request), Token(t), SHMac(s)>
   ),
   State_Srv_challenge_new( ~chId_srv_ti, ~chId_srv_usr, $Srv, $Usr,
                            newChlg, url, request
   )
   ]
  --[
  SrvForwardStoredToken( $Srv, $Ti, t ),
  Unique( <$Srv, $Ti, request, t, s> ),
  Usr_token_rcv( ~chId_srv_usr, $Usr, $Srv,
                 <'8', $Usr, Challenge(newChlg), URL(request), Token(t), SHMac(s)>
  )
  ]->
   [
   Out_S( ~chId_srv_ti, $Srv, $Ti,
          <'8', $Usr, URL(request), Token(t), SHMac(s)>
   ),
   State_Srv_forward_stored_token( t, ~chId_srv_ti, ~chId_srv_usr,
                                   $Srv, $Ti, request
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Ti_verify_stored_token:
   [
   In_S( ~chId_srv_ti, $Srv, $Ti,
         <'8', $Usr, URL(request), Token(t), SHMac(s)>
   ),
   !State_Ti_signedBlTok( ~chId_srv_ti, $Ti, $Srv, secr_key,
                          signedBlTok, signedBlTok1, signedBlTok2
   )
   ]
  --[
  Eq( CheckTokenSpent($Ti, t), false ),
  Eq( s,
      HMAC(h2(t, sign(h1(t), secr_key)), CalcR($Usr, $Ti, request))
  ),
  TiVerifySignedToken( $Ti, t, secr_key ),
  Ti_verify_redeeming_sent( ~chId_srv_ti, $Ti, $Srv,
                            <'9', URL(request), true>
  )
  ]->
   [
   Out_S( ~chId_srv_ti, $Ti, $Srv, <'9', URL(request), true> ),
   TokenSpent( $Ti, $Usr, t )
   ]

  // loop breaker: [0]
  /*
  rule (modulo AC) Ti_verify_stored_token:
     [
     In_S( ~chId_srv_ti, $Srv, $Ti,
           <'8', $Usr, URL(request), Token(t), SHMac(s)>
     ),
     !State_Ti_signedBlTok( ~chId_srv_ti, $Ti, $Srv, secr_key,
                            signedBlTok, signedBlTok1, signedBlTok2
     )
     ]
    --[
    Eq( false, false ),
    Eq( s,
        HMAC(h2(t, sign(h1(t), secr_key)), CalcR($Usr, $Ti, request))
    ),
    TiVerifySignedToken( $Ti, t, secr_key ),
    Ti_verify_redeeming_sent( ~chId_srv_ti, $Ti, $Srv,
                              <'9', URL(request), true>
    )
    ]->
     [
     Out_S( ~chId_srv_ti, $Ti, $Srv, <'9', URL(request), true> ),
     TokenSpent( $Ti, $Usr, t )
     ]
    // loop breaker: [0]
  */

rule (modulo E) Srv_send_new_res:
   [
   In_S( ~chId_srv_ti, $Ti, $Srv, <'9', URL(request), verified> ),
   Fr( ~newRes ),
   State_Srv_forward_stored_token( t, ~chId_srv_ti, ~chId_srv_usr,
                                   $Srv, $Ti, request
   )
   ]
  --[
  Eq( verified, true ), SrvSendNewResource( $Srv, $Usr, ~newRes, t ),
  Unique( <$Srv, $Usr, ~newRes> ),
  Ti_verify_redeeming_rcv( ~chId_srv_ti, $Ti, $Srv,
                           <'9', URL(request), verified>
  )
  ]->
   [
   Out_S( ~chId_srv_usr, $Srv, $Usr,
          <'10', URL(request), WebResources(~newRes)>
   )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Usr_receive_res:
   [
   In_S( ~chId_srv_usr, $Srv, $Usr,
         <'10', URL(request), WebResources(newRes)>
   ),
   State_Usr_send_stored_token( ~chId_srv_usr, $Usr, $Srv, request, t
   )
   ]
  --[ UsrReceivedNewResource( $Usr, $Srv, request, t, newRes ) ]->
   [ ]

  /* has exactly the trivial AC variant */

lemma one_more_token_security:
  all-traces
  "∀ ticketIssuer server user t Y secr_key res #i #k #l.
    (((((Setup_Ti( ticketIssuer, Y, secr_key ) @ #i) ∧
        (TiVerifySignedToken( ticketIssuer, t, secr_key ) @ #k)) ∧
       (SrvSendNewResource( server, user, res, t ) @ #l)) ∧
      (#i < #k)) ∧
     (#k < #l)) ⇒
    (∃ #j.
      (TiSignsToken( ticketIssuer, t, secr_key ) @ #j) ∧ (#j < #k))"
/*
guarded formula characterizing all counter-examples:
"∃ ticketIssuer server user t Y secr_key res #i #k #l.
  (Setup_Ti( ticketIssuer, Y, secr_key ) @ #i) ∧
  (TiVerifySignedToken( ticketIssuer, t, secr_key ) @ #k) ∧
  (SrvSendNewResource( server, user, res, t ) @ #l)
 ∧
  (#i < #k) ∧
  (#k < #l) ∧
  (∀ #j.
    (TiSignsToken( ticketIssuer, t, secr_key ) @ #j) ⇒ ¬(#j < #k))"
*/
simplify
solve( !State_Ti_signedBlTok( ~chId_srv_ti, $Ti, $Srv, ~n.3,
                              signedBlTok, signedBlTok1, signedBlTok2
       ) ▶₁ #k )
  case Ti_verify_solution
  solve( State_Srv_forward_stored_token( t, ~chId_srv_ti.1,
                                         ~chId_srv_usr, $Srv.1, $Ti.1, request.1
         ) ▶₂ #l )
    case Srv_forward_stored_token
    solve( In_S( ~chId_srv_ti, $Srv, $Ti,
                 <'8', $Usr, URL(request), Token(t), 
                  SHMac(HMAC(h2(t, sign(h1(t), ~n.3)), CalcR($Usr, $Ti, request)))>
           ) ▶₀ #k )
      case ChanIn_S_case_1
      solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                   <'8', $Usr, Challenge(~newChlg.1), URL(request), Token(t), 
                    SHMac(HMAC(h2(t, sign(h1(t), ~n.3)), CalcR($Usr, $Ti, request)))>
             ) ▶₀ #vr.12 )
        case ChanIn_S_case_1
        solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                     <'5', URL(~url.2), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                      SignedToken(signedBlTok1.1), SignedToken(signedBlTok2.1), 
                      CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                      SMod(mod(minus(x,
                                     multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1),
                                              ~n.3)),
                               x.1)), 
                      WebResources(resource.1)>
               ) ▶₀ #vr.18 )
          case ChanIn_S_case_1
          solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                       <'4', $Ti, URL(~url.1), 
                        SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                        SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                        CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                        SMod(mod(minus(x,
                                       multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                   z.1),
                                                ~n.3)),
                                 x.1))
                       >
                 ) ▶₀ #vr.5 )
            case ChanIn_S_case_1
            by contradiction /* from formulas */
          next
            case ChanIn_S_case_2
            solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                 z.1))
                   ) @ #vk.18 )
              case ChanIn_Comp
              solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.13 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.20 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.22 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t), ~r) ) @ #vk.22 )
                      case c_blind
                      by solve( !KU( ~r ) @ #vk.24 )
                    qed
                  qed
                qed
              qed
            next
              case c_CHash
              solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                     ) @ #vk.20 )
                case c_h3
                by solve( !KU( ~n ) @ #vk.21 )
              qed
            qed
          qed
        next
          case ChanIn_S_case_2
          solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                               z.1))
                 ) @ #vk.17 )
            case ChanIn_Comp_case_1
            solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.12 )
              case ChanIn_Comp_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_2
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_3
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_4
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                            SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                            SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_5
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                            SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                            SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_6
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                            SignedToken(signedBlTok1), 
                            SignedToken(sign(blind(h1(~t), ~r), ~n.3)), CHash(c), SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case c_SignedToken
              solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.21 )
                case c_sign
                solve( !KU( ~n.3 ) @ #vk.23 )
                  case Ti_leaked_signing_key
                  solve( !KU( blind(h1(~t), ~r) ) @ #vk.23 )
                    case c_blind
                    by solve( !KU( ~r ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case ChanIn_Comp_case_2
            solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.12 )
              case ChanIn_Comp_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_2
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_3
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_4
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                            SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_5
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(signedBlTok), 
                            SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                            SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_6
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(signedBlTok), 
                            SignedToken(signedBlTok1), 
                            SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_SignedToken
              solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.21 )
                case c_sign
                solve( !KU( ~n.3 ) @ #vk.23 )
                  case Ti_leaked_signing_key
                  solve( !KU( blind(h1(~t), ~r) ) @ #vk.23 )
                    case c_blind
                    by solve( !KU( ~r ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case c_CHash
            solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                   ) @ #vk.21 )
              case c_h3
              by solve( !KU( ~n ) @ #vk.22 )
            qed
          qed
        qed
      next
        case ChanIn_S_case_2
        solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                     <'5', URL(~url.2), SignedToken(signedBlTok.1), 
                      SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                      SignedToken(signedBlTok2.1), 
                      CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                      SMod(mod(minus(x,
                                     multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1),
                                              ~n.3)),
                               x.1)), 
                      WebResources(resource.1)>
               ) ▶₀ #vr.18 )
          case ChanIn_S_case_1
          solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                       <'4', $Ti, URL(~url.1), SignedToken(signedBlTok), 
                        SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                        SignedToken(signedBlTok2), 
                        CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                        SMod(mod(minus(x,
                                       multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                   z.1),
                                                ~n.3)),
                                 x.1))
                       >
                 ) ▶₀ #vr.5 )
            case ChanIn_S_case_1
            by contradiction /* from formulas */
          next
            case ChanIn_S_case_2
            solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                 z.1))
                   ) @ #vk.18 )
              case ChanIn_Comp
              solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                     ) @ #vk.15 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.20 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.22 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.22 )
                      case c_blind
                      by solve( !KU( ~r1 ) @ #vk.24 )
                    qed
                  qed
                qed
              qed
            next
              case c_CHash
              solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                     ) @ #vk.20 )
                case c_h3
                by solve( !KU( ~n ) @ #vk.21 )
              qed
            qed
          qed
        next
          case ChanIn_S_case_2
          solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                               z.1))
                 ) @ #vk.17 )
            case ChanIn_Comp_case_1
            solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                   ) @ #vk.14 )
              case ChanIn_Comp_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_2
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_3
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_4
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), 
                            SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                            SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                            SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_5
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                            SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                            SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_6
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                            SignedToken(signedBlTok1), 
                            SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), CHash(c), SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case c_SignedToken
              solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.21 )
                case c_sign
                solve( !KU( ~n.3 ) @ #vk.23 )
                  case Ti_leaked_signing_key
                  solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.23 )
                    case c_blind
                    by solve( !KU( ~r1 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case ChanIn_Comp_case_2
            solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                   ) @ #vk.14 )
              case ChanIn_Comp_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_2
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_3
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_4
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                            SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_5
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(signedBlTok), 
                            SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                            SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_6
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(signedBlTok), 
                            SignedToken(signedBlTok1), 
                            SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_SignedToken
              solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.21 )
                case c_sign
                solve( !KU( ~n.3 ) @ #vk.23 )
                  case Ti_leaked_signing_key
                  solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.23 )
                    case c_blind
                    by solve( !KU( ~r1 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case c_CHash
            solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                   ) @ #vk.21 )
              case c_h3
              by solve( !KU( ~n ) @ #vk.22 )
            qed
          qed
        qed
      next
        case ChanIn_S_case_3
        solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                     <'5', URL(~url.2), SignedToken(signedBlTok.1), 
                      SignedToken(signedBlTok1.1), 
                      SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                      CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                      SMod(mod(minus(x,
                                     multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1),
                                              ~n.3)),
                               x.1)), 
                      WebResources(resource.1)>
               ) ▶₀ #vr.18 )
          case ChanIn_S_case_1
          solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                       <'4', $Ti, URL(~url.1), SignedToken(signedBlTok), 
                        SignedToken(signedBlTok1), 
                        SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                        CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                        SMod(mod(minus(x,
                                       multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                   z.1),
                                                ~n.3)),
                                 x.1))
                       >
                 ) ▶₀ #vr.5 )
            case ChanIn_S_case_1
            by contradiction /* from formulas */
          next
            case ChanIn_S_case_2
            solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                 z.1))
                   ) @ #vk.18 )
              case ChanIn_Comp
              solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                     ) @ #vk.17 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.20 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.22 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.22 )
                      case c_blind
                      by solve( !KU( ~r2 ) @ #vk.24 )
                    qed
                  qed
                qed
              qed
            next
              case c_CHash
              solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                     ) @ #vk.20 )
                case c_h3
                by solve( !KU( ~n ) @ #vk.21 )
              qed
            qed
          qed
        next
          case ChanIn_S_case_2
          solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                               z.1))
                 ) @ #vk.17 )
            case ChanIn_Comp_case_1
            solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                   ) @ #vk.16 )
              case ChanIn_Comp_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_2
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_3
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_4
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), 
                            SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                            SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                            SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_5
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                            SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                            SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_6
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                            SignedToken(signedBlTok1), 
                            SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), CHash(c), SMod(s.1)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S
                by contradiction /* cyclic */
              qed
            next
              case c_SignedToken
              solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.21 )
                case c_sign
                solve( !KU( ~n.3 ) @ #vk.23 )
                  case Ti_leaked_signing_key
                  solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.23 )
                    case c_blind
                    by solve( !KU( ~r2 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case ChanIn_Comp_case_2
            solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                   ) @ #vk.16 )
              case ChanIn_Comp_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_2
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_3
              by contradiction /* from formulas */
            next
              case ChanIn_Comp_case_4
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                            SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_5
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(signedBlTok), 
                            SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                            SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case ChanIn_Comp_case_6
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(url), SignedToken(signedBlTok), 
                            SignedToken(signedBlTok1), 
                            SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(s)>
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                by contradiction /* cyclic */
              qed
            next
              case c_SignedToken
              solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.21 )
                case c_sign
                solve( !KU( ~n.3 ) @ #vk.23 )
                  case Ti_leaked_signing_key
                  solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.23 )
                    case c_blind
                    by solve( !KU( ~r2 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case c_CHash
            solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                   ) @ #vk.21 )
              case c_h3
              by solve( !KU( ~n ) @ #vk.22 )
            qed
          qed
        qed
      next
        case ChanIn_S_case_4
        solve( !KU( SHMac(HMAC(h2(t, sign(h1(t), ~n.3)),
                               CalcR($Usr, $Ti, request)))
               ) @ #vk.15 )
          case ChanIn_Comp_case_1
          solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                       <'5', URL(~url.2), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                        SignedToken(signedBlTok1.1), SignedToken(signedBlTok2.1), 
                        CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                        SMod(mod(minus(x,
                                       multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                   z.1),
                                                ~n.3)),
                                 x.1)), 
                        WebResources(resource.1)>
                 ) ▶₀ #vr.26 )
            case ChanIn_S_case_1
            solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                         <'4', $Ti, URL(~url.1), 
                          SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                          SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                          CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                          SMod(mod(minus(x,
                                         multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                     z.1),
                                                  ~n.3)),
                                   x.1))
                         >
                   ) ▶₀ #vr.5 )
              case ChanIn_S_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_S_case_2
              solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                   z.1))
                     ) @ #vk.33 )
                case ChanIn_Comp
                solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.28 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.35 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.37 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t), ~r) ) @ #vk.37 )
                        case c_blind
                        by solve( !KU( ~r ) @ #vk.39 )
                      qed
                    qed
                  qed
                qed
              next
                case c_CHash
                solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                       ) @ #vk.35 )
                  case c_h3
                  by solve( !KU( ~n ) @ #vk.36 )
                qed
              qed
            qed
          next
            case ChanIn_S_case_2
            solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                 z.1))
                   ) @ #vk.30 )
              case ChanIn_Comp_case_1
              solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.25 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_4
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                              SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                              SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_5
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                              SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_6
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(signedBlTok1), 
                              SignedToken(sign(blind(h1(~t), ~r), ~n.3)), CHash(c), SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.34 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.36 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t), ~r) ) @ #vk.36 )
                      case c_blind
                      by solve( !KU( ~r ) @ #vk.38 )
                    qed
                  qed
                qed
              qed
            next
              case ChanIn_Comp_case_2
              solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.25 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_4
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                              SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_5
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                              SignedToken(signedBlTok2), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_6
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(signedBlTok1), 
                              SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.34 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.36 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t), ~r) ) @ #vk.36 )
                      case c_blind
                      by solve( !KU( ~r ) @ #vk.38 )
                    qed
                  qed
                qed
              qed
            next
              case c_CHash
              solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                     ) @ #vk.34 )
                case c_h3
                by solve( !KU( ~n ) @ #vk.35 )
              qed
            qed
          qed
        next
          case ChanIn_Comp_case_2
          solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                       <'5', URL(~url.2), SignedToken(signedBlTok.1), 
                        SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                        SignedToken(signedBlTok2.1), 
                        CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                        SMod(mod(minus(x,
                                       multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                   z.1),
                                                ~n.3)),
                                 x.1)), 
                        WebResources(resource.1)>
                 ) ▶₀ #vr.26 )
            case ChanIn_S_case_1
            solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                         <'4', $Ti, URL(~url.1), SignedToken(signedBlTok), 
                          SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                          SignedToken(signedBlTok2), 
                          CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                          SMod(mod(minus(x,
                                         multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                     z.1),
                                                  ~n.3)),
                                   x.1))
                         >
                   ) ▶₀ #vr.5 )
              case ChanIn_S_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_S_case_2
              solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                   z.1))
                     ) @ #vk.33 )
                case ChanIn_Comp
                solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                       ) @ #vk.30 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.35 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.37 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.37 )
                        case c_blind
                        by solve( !KU( ~r1 ) @ #vk.39 )
                      qed
                    qed
                  qed
                qed
              next
                case c_CHash
                solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                       ) @ #vk.35 )
                  case c_h3
                  by solve( !KU( ~n ) @ #vk.36 )
                qed
              qed
            qed
          next
            case ChanIn_S_case_2
            solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                 z.1))
                   ) @ #vk.30 )
              case ChanIn_Comp_case_1
              solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                     ) @ #vk.27 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_4
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), 
                              SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                              SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                              SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_5
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                              SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_6
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(signedBlTok1), 
                              SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), CHash(c), SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.34 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.36 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.36 )
                      case c_blind
                      by solve( !KU( ~r1 ) @ #vk.38 )
                    qed
                  qed
                qed
              qed
            next
              case ChanIn_Comp_case_2
              solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                     ) @ #vk.27 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_4
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), 
                              SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                              SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_5
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                              SignedToken(signedBlTok2), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_6
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(signedBlTok1), 
                              SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.34 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.36 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.36 )
                      case c_blind
                      by solve( !KU( ~r1 ) @ #vk.38 )
                    qed
                  qed
                qed
              qed
            next
              case c_CHash
              solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                     ) @ #vk.34 )
                case c_h3
                by solve( !KU( ~n ) @ #vk.35 )
              qed
            qed
          qed
        next
          case ChanIn_Comp_case_3
          solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                       <'5', URL(~url.2), SignedToken(signedBlTok.1), 
                        SignedToken(signedBlTok1.1), 
                        SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                        CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                        SMod(mod(minus(x,
                                       multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                   z.1),
                                                ~n.3)),
                                 x.1)), 
                        WebResources(resource.1)>
                 ) ▶₀ #vr.26 )
            case ChanIn_S_case_1
            solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                         <'4', $Ti, URL(~url.1), SignedToken(signedBlTok), 
                          SignedToken(signedBlTok1), 
                          SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                          CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                          SMod(mod(minus(x,
                                         multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                     z.1),
                                                  ~n.3)),
                                   x.1))
                         >
                   ) ▶₀ #vr.5 )
              case ChanIn_S_case_1
              by contradiction /* from formulas */
            next
              case ChanIn_S_case_2
              solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                   z.1))
                     ) @ #vk.33 )
                case ChanIn_Comp
                solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                       ) @ #vk.32 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.35 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.37 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.37 )
                        case c_blind
                        by solve( !KU( ~r2 ) @ #vk.39 )
                      qed
                    qed
                  qed
                qed
              next
                case c_CHash
                solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                       ) @ #vk.35 )
                  case c_h3
                  by solve( !KU( ~n ) @ #vk.36 )
                qed
              qed
            qed
          next
            case ChanIn_S_case_2
            solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                 z.1))
                   ) @ #vk.30 )
              case ChanIn_Comp_case_1
              solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                     ) @ #vk.29 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_4
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), 
                              SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                              SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                              SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_5
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                              SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_6
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(signedBlTok1), 
                              SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), CHash(c), SMod(s.1)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S
                  by contradiction /* cyclic */
                qed
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.34 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.36 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.36 )
                      case c_blind
                      by solve( !KU( ~r2 ) @ #vk.38 )
                    qed
                  qed
                qed
              qed
            next
              case ChanIn_Comp_case_2
              solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                     ) @ #vk.29 )
                case ChanIn_Comp_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_2
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_3
                by contradiction /* from formulas */
              next
                case ChanIn_Comp_case_4
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), 
                              SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                              SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_5
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                              SignedToken(signedBlTok2), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case ChanIn_Comp_case_6
                solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                             <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                              SignedToken(signedBlTok1), 
                              SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                              CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                              SMod(s)>
                       ) ▶₀ #vr.5 )
                  case ChanIn_S_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_S_case_2
                  by contradiction /* cyclic */
                qed
              next
                case c_SignedToken
                solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.34 )
                  case c_sign
                  solve( !KU( ~n.3 ) @ #vk.36 )
                    case Ti_leaked_signing_key
                    solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.36 )
                      case c_blind
                      by solve( !KU( ~r2 ) @ #vk.38 )
                    qed
                  qed
                qed
              qed
            next
              case c_CHash
              solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                     ) @ #vk.34 )
                case c_h3
                by solve( !KU( ~n ) @ #vk.35 )
              qed
            qed
          qed
        next
          case ChanIn_Comp_case_4
          solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                       <'8', $Usr, Challenge(~newChlg.2), URL(request.2), Token(t.1), 
                        SHMac(HMAC(h2(t, sign(h1(t), ~n.3)), CalcR($Usr, $Ti, request)))>
                 ) ▶₀ #vr.19 )
            case ChanIn_S_case_1
            solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                         <'5', URL(~url.2), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                          SignedToken(signedBlTok1.1), SignedToken(signedBlTok2.1), 
                          CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                          SMod(mod(minus(x,
                                         multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                     z.1),
                                                  ~n.3)),
                                   x.1)), 
                          WebResources(resource.1)>
                   ) ▶₀ #vr.29 )
              case ChanIn_S_case_1
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(~url.1), 
                            SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                            SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(mod(minus(x,
                                           multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                       z.1),
                                                    ~n.3)),
                                     x.1))
                           >
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                     z.1))
                       ) @ #vk.33 )
                  case ChanIn_Comp
                  solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.28 )
                    case ChanIn_Comp_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_Comp_case_2
                    by contradiction /* from formulas */
                  next
                    case ChanIn_Comp_case_3
                    by contradiction /* from formulas */
                  next
                    case c_SignedToken
                    solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.35 )
                      case c_sign
                      solve( !KU( ~n.3 ) @ #vk.37 )
                        case Ti_leaked_signing_key
                        solve( !KU( blind(h1(~t), ~r) ) @ #vk.37 )
                          case c_blind
                          by solve( !KU( ~r ) @ #vk.39 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_CHash
                  solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                         ) @ #vk.35 )
                    case c_h3
                    by solve( !KU( ~n ) @ #vk.36 )
                  qed
                qed
              qed
            next
              case ChanIn_S_case_2
              solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                   z.1))
                     ) @ #vk.30 )
                case ChanIn_Comp_case_1
                solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.25 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_4
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                                SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                                SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_5
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                                SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_6
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(signedBlTok1), 
                                SignedToken(sign(blind(h1(~t), ~r), ~n.3)), CHash(c), SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.34 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.36 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t), ~r) ) @ #vk.36 )
                        case c_blind
                        by solve( !KU( ~r ) @ #vk.38 )
                      qed
                    qed
                  qed
                qed
              next
                case ChanIn_Comp_case_2
                solve( !KU( SignedToken(sign(blind(h1(~t), ~r), ~n.3)) ) @ #vk.25 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_4
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                                SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_5
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                                SignedToken(signedBlTok2), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_6
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(signedBlTok1), 
                                SignedToken(sign(blind(h1(~t), ~r), ~n.3)), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t), ~r), ~n.3) ) @ #vk.34 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.36 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t), ~r) ) @ #vk.36 )
                        case c_blind
                        by solve( !KU( ~r ) @ #vk.38 )
                      qed
                    qed
                  qed
                qed
              next
                case c_CHash
                solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                       ) @ #vk.34 )
                  case c_h3
                  by solve( !KU( ~n ) @ #vk.35 )
                qed
              qed
            qed
          next
            case ChanIn_S_case_2
            solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                         <'5', URL(~url.2), SignedToken(signedBlTok.1), 
                          SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                          SignedToken(signedBlTok2.1), 
                          CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                          SMod(mod(minus(x,
                                         multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                     z.1),
                                                  ~n.3)),
                                   x.1)), 
                          WebResources(resource.1)>
                   ) ▶₀ #vr.29 )
              case ChanIn_S_case_1
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(~url.1), SignedToken(signedBlTok), 
                            SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                            SignedToken(signedBlTok2), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(mod(minus(x,
                                           multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                       z.1),
                                                    ~n.3)),
                                     x.1))
                           >
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                     z.1))
                       ) @ #vk.33 )
                  case ChanIn_Comp
                  solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                         ) @ #vk.30 )
                    case ChanIn_Comp_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_Comp_case_2
                    by contradiction /* from formulas */
                  next
                    case ChanIn_Comp_case_3
                    by contradiction /* from formulas */
                  next
                    case c_SignedToken
                    solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.35 )
                      case c_sign
                      solve( !KU( ~n.3 ) @ #vk.37 )
                        case Ti_leaked_signing_key
                        solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.37 )
                          case c_blind
                          by solve( !KU( ~r1 ) @ #vk.39 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_CHash
                  solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                         ) @ #vk.35 )
                    case c_h3
                    by solve( !KU( ~n ) @ #vk.36 )
                  qed
                qed
              qed
            next
              case ChanIn_S_case_2
              solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                   z.1))
                     ) @ #vk.30 )
                case ChanIn_Comp_case_1
                solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                       ) @ #vk.27 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_4
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), 
                                SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                                SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                                SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_5
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                                SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_6
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(signedBlTok1), 
                                SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), CHash(c), SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.34 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.36 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.36 )
                        case c_blind
                        by solve( !KU( ~r1 ) @ #vk.38 )
                      qed
                    qed
                  qed
                qed
              next
                case ChanIn_Comp_case_2
                solve( !KU( SignedToken(sign(blind(h1(~t1), ~r1), ~n.3))
                       ) @ #vk.27 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_4
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), 
                                SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                                SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_5
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                                SignedToken(signedBlTok2), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_6
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(signedBlTok1), 
                                SignedToken(sign(blind(h1(~t1), ~r1), ~n.3)), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t1), ~r1), ~n.3) ) @ #vk.34 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.36 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t1), ~r1) ) @ #vk.36 )
                        case c_blind
                        by solve( !KU( ~r1 ) @ #vk.38 )
                      qed
                    qed
                  qed
                qed
              next
                case c_CHash
                solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                       ) @ #vk.34 )
                  case c_h3
                  by solve( !KU( ~n ) @ #vk.35 )
                qed
              qed
            qed
          next
            case ChanIn_S_case_3
            solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                         <'5', URL(~url.2), SignedToken(signedBlTok.1), 
                          SignedToken(signedBlTok1.1), 
                          SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                          CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                          SMod(mod(minus(x,
                                         multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                     z.1),
                                                  ~n.3)),
                                   x.1)), 
                          WebResources(resource.1)>
                   ) ▶₀ #vr.29 )
              case ChanIn_S_case_1
              solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                           <'4', $Ti, URL(~url.1), SignedToken(signedBlTok), 
                            SignedToken(signedBlTok1), 
                            SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                            CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                            SMod(mod(minus(x,
                                           multiply(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                                       z.1),
                                                    ~n.3)),
                                     x.1))
                           >
                     ) ▶₀ #vr.5 )
                case ChanIn_S_case_1
                by contradiction /* from formulas */
              next
                case ChanIn_S_case_2
                solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                     z.1))
                       ) @ #vk.33 )
                  case ChanIn_Comp
                  solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                         ) @ #vk.32 )
                    case ChanIn_Comp_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_Comp_case_2
                    by contradiction /* from formulas */
                  next
                    case ChanIn_Comp_case_3
                    by contradiction /* from formulas */
                  next
                    case c_SignedToken
                    solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.35 )
                      case c_sign
                      solve( !KU( ~n.3 ) @ #vk.37 )
                        case Ti_leaked_signing_key
                        solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.37 )
                          case c_blind
                          by solve( !KU( ~r2 ) @ #vk.39 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_CHash
                  solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                         ) @ #vk.35 )
                    case c_h3
                    by solve( !KU( ~n ) @ #vk.36 )
                  qed
                qed
              qed
            next
              case ChanIn_S_case_2
              solve( !KU( CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z,
                                   z.1))
                     ) @ #vk.30 )
                case ChanIn_Comp_case_1
                solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                       ) @ #vk.29 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_4
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), 
                                SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                                SignedToken(signedBlTok1), SignedToken(signedBlTok2), CHash(c), 
                                SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_5
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                                SignedToken(signedBlTok2), CHash(c), SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_6
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(signedBlTok1), 
                                SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), CHash(c), SMod(s.1)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S
                    by contradiction /* cyclic */
                  qed
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.34 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.36 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.36 )
                        case c_blind
                        by solve( !KU( ~r2 ) @ #vk.38 )
                      qed
                    qed
                  qed
                qed
              next
                case ChanIn_Comp_case_2
                solve( !KU( SignedToken(sign(blind(h1(~t2), ~r2), ~n.3))
                       ) @ #vk.29 )
                  case ChanIn_Comp_case_1
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_2
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_3
                  by contradiction /* from formulas */
                next
                  case ChanIn_Comp_case_4
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), 
                                SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                                SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_5
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                                SignedToken(signedBlTok2), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case ChanIn_Comp_case_6
                  solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                               <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                SignedToken(signedBlTok1), 
                                SignedToken(sign(blind(h1(~t2), ~r2), ~n.3)), 
                                CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)), 
                                SMod(s)>
                         ) ▶₀ #vr.5 )
                    case ChanIn_S_case_1
                    by contradiction /* from formulas */
                  next
                    case ChanIn_S_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case c_SignedToken
                  solve( !KU( sign(blind(h1(~t2), ~r2), ~n.3) ) @ #vk.34 )
                    case c_sign
                    solve( !KU( ~n.3 ) @ #vk.36 )
                      case Ti_leaked_signing_key
                      solve( !KU( blind(h1(~t2), ~r2) ) @ #vk.36 )
                        case c_blind
                        by solve( !KU( ~r2 ) @ #vk.38 )
                      qed
                    qed
                  qed
                qed
              next
                case c_CHash
                solve( !KU( h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3), z, z.1)
                       ) @ #vk.34 )
                  case c_h3
                  by solve( !KU( ~n ) @ #vk.35 )
                qed
              qed
            qed
          next
            case ChanIn_S_case_4
            by contradiction /* cyclic */
          qed
        next
          case c_SHMac
          solve( !KU( HMAC(h2(t, sign(h1(t), ~n.3)),
                           CalcR($Usr, $Ti, request))
                 ) @ #vk.16 )
            case c_HMAC
            solve( !KU( h2(t, sign(h1(t), ~n.3)) ) @ #vk.17 )
              case c_h2
              solve( !KU( sign(h1(t), ~n.3) ) @ #vk.20 )
                case c_sign
                solve( !KU( ~n.3 ) @ #vk.22 )
                  case Ti_leaked_signing_key
                  solve( !KU( CalcR($Usr, $Ti, request) ) @ #vk.20 )
                    case c_CalcR
                    solve( !KU( h1(t) ) @ #vk.22 )
                      case c_h1
                      solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                                   <'8', $Usr, Challenge(~newChlg), URL(request.1), Token(t), 
                                    SHMac(s)>
                             ) ▶₀ #vr.3 )
                        case ChanIn_S_case_1
                        by solve( !KU( ~t ) @ #vk.22 )
                      next
                        case ChanIn_S_case_2
                        by solve( !KU( ~t1 ) @ #vk.22 )
                      next
                        case ChanIn_S_case_3
                        by solve( !KU( ~t2 ) @ #vk.22 )
                      next
                        case ChanIn_S_case_4
                        solve( In_S( ~chId_srv_ti, $Ti, $Srv,
                                     <'4', $Ti, URL(url.1), SignedToken(signedBlTok), 
                                      SignedToken(signedBlTok1), SignedToken(signedBlTok2), 
                                      CHash(c), SMod(s.1)>
                               ) ▶₀ #vr.5 )
                          case ChanIn_S_case_1
                          solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                                       <'3', $Usr, UserSolution(~solution.1), URL(url), 
                                        BlindedToken(blindedToken), BlindedToken(blindedToken1), 
                                        BlindedToken(blindedToken2)>
                                 ) ▶₀ #vr.6 )
                            case ChanIn_S_case_1
                            solve( In_S( ~chId_srv_ti, $Srv, $Ti,
                                         <'3', $Usr.2, UserSolution(~solution), URL(~url), 
                                          BlindedToken(blind(h1(h1t), tr)), 
                                          BlindedToken(blind(h1(h1t1), tr1)), 
                                          BlindedToken(blind(h1(h1t2), tr2))>
                                   ) ▶₀ #vr )
                              case ChanIn_S_case_1
                              solve( In_S( ~chId_srv_ti, $Ti.1, $Srv, <'9', URL(request.1), true>
                                     ) ▶₀ #l )
                                case ChanIn_S_case_1
                                solve( In_S( ~chId_srv_ti, $Srv, $Ti,
                                             <'8', $Usr.2, URL(request.1), Token(t.2), 
                                              SHMac(HMAC(h2(t.2, sign(h1(t.2), ~n.3)),
                                                         CalcR($Usr.2, $Ti, request.1)))
                                             >
                                       ) ▶₀ #vr.29 )
                                  case ChanIn_S_case_1
                                  solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                                               <'8', $Usr, Challenge(~newChlg.2), URL(request.1), 
                                                Token(t.2), 
                                                SHMac(HMAC(h2(t.2, sign(h1(t.2), ~n.3)),
                                                           CalcR($Usr, $Ti, request.1)))
                                               >
                                         ) ▶₀ #vr.32 )
                                    case ChanIn_S_case_1
                                    solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                                                 <'5', URL(~url), 
                                                  SignedToken(sign(blind(h1(~t.1), ~r), ~n.3)), 
                                                  SignedToken(signedBlTok1), 
                                                  SignedToken(signedBlTok2), 
                                                  CHash(h3(~n, pow(~n, ~n.3), ~n.1, pow(~n.1, ~n.3),
                                                           z, z.1)), 
                                                  SMod(mod(minus(x,
                                                                 multiply(h3(~n, pow(~n, ~n.3),
                                                                             ~n.1, pow(~n.1, ~n.3),
                                                                             z, z.1),
                                                                          ~n.3)),
                                                           x.1)), 
                                                  WebResources(resource.1)>
                                           ) ▶₀ #vr.38 )
                                      case ChanIn_S_case_1
                                      solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                                                   <'6', $Usr, URL(~request.1)>
                                             ) ▶₀ #vr.4 )
                                        case ChanIn_S_case_1
                                        solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                                                     <'1', $Usr, URL(~url)>
                                               ) ▶₀ #vr.7 )
                                          case ChanIn_S_case_1
                                          solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                                                       <'6', $Usr, URL(request)>
                                                 ) ▶₀ #vr.13 )
                                            case ChanIn_S_case_1
                                            by solve( !KU( ~request ) @ #vk.24 )
                                          next
                                            case ChanIn_S_case_2
                                            by solve( !KU( ~request ) @ #vk.32 )
                                          next
                                            case ChanIn_S_case_3
                                            by solve( !KU( ~request ) @ #vk.32 )
                                          next
                                            case ChanIn_S_case_4
                                            solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                                                         <'2', $Srv, URL(~url), 
                                                          Challenge(challenge.1), pow(~n, ~n.3)>
                                                   ) ▶₀ #vr.23 )
                                              case ChanIn_S_case_1
                                              solve( In_S( ~chId_srv_usr, $Usr, $Srv,
                                                           <'6', $Usr, URL(~request.1)>
                                                     ) ▶₀ #vr.33 )
                                                case ChanIn_S
                                                solve( In_S( ~chId_srv_usr, $Srv, $Usr,
                                                             <'7', $Srv, Challenge(~newChlg.2), Y>
                                                       ) ▶₀ #vr.36 )
                                                  case ChanIn_S_case_1
                                                  solve( !KU( ~chId_srv_usr ) @ #vk.15 )
                                                    case ChanIn_Comp_case_1
                                                    solve( !KU( Challenge(~newChlg.1) ) @ #vk.34 )
                                                      case ChanIn_Comp_case_1
                                                      solve( !KU( Challenge(~newChlg) ) @ #vk.43 )
                                                        case ChanIn_Comp_case_1
                                                        solve( !KU( URL(~request.1) ) @ #vk.44 )
                                                          case ChanIn_Comp_case_1
                                                          by sorry
                                                        next
                                                          case ChanIn_Comp_case_2
                                                          by sorry
                                                        next
                                                          case ChanIn_Comp_case_3
                                                          by sorry
                                                        next
                                                          case c_URL
                                                          by sorry
                                                        qed
                                                      next
                                                        case ChanIn_Comp_case_2
                                                        by sorry
                                                      next
                                                        case ChanIn_Comp_case_3
                                                        by sorry
                                                      next
                                                        case ChanIn_Comp_case_4
                                                        by sorry
                                                      next
                                                        case c_Challenge
                                                        by sorry
                                                      qed
                                                    next
                                                      case ChanIn_Comp_case_2
                                                      by sorry
                                                    next
                                                      case ChanIn_Comp_case_3
                                                      by sorry
                                                    next
                                                      case ChanIn_Comp_case_4
                                                      by sorry
                                                    next
                                                      case c_Challenge
                                                      by sorry
                                                    qed
                                                  next
                                                    case ChanIn_Comp_case_2
                                                    by sorry
                                                  next
                                                    case ChanIn_Comp_case_3
                                                    by sorry
                                                  next
                                                    case ChanIn_Comp_case_4
                                                    by sorry
                                                  next
                                                    case ChanIn_Comp_case_5
                                                    by sorry
                                                  next
                                                    case ChanIn_Comp_case_6
                                                    by sorry
                                                  qed
                                                next
                                                  case ChanIn_S_case_2
                                                  by sorry
                                                qed
                                              qed
                                            next
                                              case ChanIn_S_case_2
                                              by sorry
                                            qed
                                          qed
                                        next
                                          case ChanIn_S_case_2
                                          by sorry
                                        qed
                                      next
                                        case ChanIn_S_case_2
                                        by sorry
                                      qed
                                    next
                                      case ChanIn_S_case_2
                                      by sorry
                                    qed
                                  next
                                    case ChanIn_S_case_2
                                    by sorry
                                  next
                                    case ChanIn_S_case_3
                                    by sorry
                                  next
                                    case ChanIn_S_case_4
                                    by sorry
                                  qed
                                next
                                  case ChanIn_S_case_2
                                  by sorry
                                qed
                              next
                                case ChanIn_S_case_2
                                by sorry
                              qed
                            next
                              case ChanIn_S_case_2
                              by sorry
                            qed
                          next
                            case ChanIn_S_case_2
                            by sorry
                          qed
                        next
                          case ChanIn_S_case_2
                          by sorry
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case ChanIn_S_case_2
      by sorry
    qed
  qed
qed

lemma prove_correctness:
  exists-trace
  "∃ user server url Y secr_key ticketIssuer challenge solution
     blindedToken blindedToken1 blindedToken2 c s signedBlTok
     signedBlTok1 signedBlTok2 t1 t2 t3 unblinded unblinded1 unblinded2
     request1 newchallenge newRes1 request2 newRes2 request3 newRes3
     #t00 #t01 #t02 #t03 #t04 #t05 #t06 #t07 #t08 #t09 #t10 #t11 #t12
     #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20.
    (((((((((((((((((((((((((((((((((((((((((Setup_Ti( ticketIssuer, Y,
                                                       secr_key
                                             ) @ #t00) ∧
                                            (Setup_Srv( server, ticketIssuer, Y ) @ #t01)) ∧
                                           (Setup_Usr( user, server, Y ) @ #t02)) ∧
                                          (RequestContent( user, server, url ) @ #t03)) ∧
                                         (SrvPresentChallenge( server, user, ticketIssuer,
                                                               challenge, url
                                          ) @ #t04)) ∧
                                        (UsrSendSolution( user, server, ticketIssuer, solution,
                                                          blindedToken, blindedToken1,
                                                          blindedToken2, url
                                         ) @ #t05)) ∧
                                       (SrvForwardSolution( user, server, ticketIssuer, solution,
                                                            url
                                        ) @ #t06)) ∧
                                      (TiSignBlindedTokens( ticketIssuer, solution, secr_key,
                                                            signedBlTok, signedBlTok1, signedBlTok2
                                       ) @ #t07)) ∧
                                     (SrvForwardSignedBlindedTokens( server, user, c, s ) @ #t08)) ∧
                                    (UsrStoreUnblindedTokens( user, server, t1, t2, t3, unblinded,
                                                              unblinded1, unblinded2, Y
                                     ) @ #t09)) ∧
                                   (UsrSendRequest( user, server, request1, t1 ) @ #t10)) ∧
                                  (SrvPresentNewChallenge( server, user, newchallenge ) @ #t11)) ∧
                                 (UsrSendStoredToken( user, server, t1, unblinded ) @ #t12)) ∧
                                (SrvForwardStoredToken( server, ticketIssuer, t1 ) @ #t13)) ∧
                               (TiVerifySignedToken( ticketIssuer, t1, secr_key ) @ #t14)) ∧
                              (SrvSendNewResource( server, user, newRes1, t1 ) @ #t15)) ∧
                             (UsrReceivedNewResource( user, server, request1, t1, newRes1
                              ) @ #t16)) ∧
                            (UsrSendRequest( user, server, request2, t2 ) @ #t17)) ∧
                           (UsrReceivedNewResource( user, server, request2, t2, newRes2
                            ) @ #t18)) ∧
                          (UsrSendRequest( user, server, request3, t3 ) @ #t19)) ∧
                         (UsrReceivedNewResource( user, server, request3, t3, newRes3
                          ) @ #t20)) ∧
                        (#t00 < #t01)) ∧
                       (#t01 < #t02)) ∧
                      (#t02 < #t03)) ∧
                     (#t03 < #t04)) ∧
                    (#t04 < #t05)) ∧
                   (#t05 < #t06)) ∧
                  (#t06 < #t07)) ∧
                 (#t07 < #t08)) ∧
                (#t08 < #t09)) ∧
               (#t09 < #t10)) ∧
              (#t10 < #t11)) ∧
             (#t11 < #t12)) ∧
            (#t12 < #t13)) ∧
           (#t13 < #t14)) ∧
          (#t14 < #t15)) ∧
         (#t15 < #t16)) ∧
        (¬(request1 = request2))) ∧
       (¬(request1 = request3))) ∧
      (¬(request2 = request3))) ∧
     (∀ x #i #j.
       ((Unique( x ) @ #i) ∧ (Unique( x ) @ #j)) ⇒ (#i = #j))) ∧
    (¬(∃ x #c.1. Rev( x, 'secureChannel' ) @ #c.1))"
/*
guarded formula characterizing all satisfying traces:
"∃ user server url Y secr_key ticketIssuer challenge solution
   blindedToken blindedToken1 blindedToken2 c s signedBlTok
   signedBlTok1 signedBlTok2 t1 t2 t3 unblinded unblinded1 unblinded2
   request1 newchallenge newRes1 request2 newRes2 request3 newRes3
   #t00 #t01 #t02 #t03 #t04 #t05 #t06 #t07 #t08 #t09 #t10 #t11 #t12
   #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20.
  (Setup_Ti( ticketIssuer, Y, secr_key ) @ #t00) ∧
  (Setup_Srv( server, ticketIssuer, Y ) @ #t01) ∧
  (Setup_Usr( user, server, Y ) @ #t02) ∧
  (RequestContent( user, server, url ) @ #t03) ∧
  (SrvPresentChallenge( server, user, ticketIssuer, challenge, url
   ) @ #t04) ∧
  (UsrSendSolution( user, server, ticketIssuer, solution,
                    blindedToken, blindedToken1, blindedToken2, url
   ) @ #t05) ∧
  (SrvForwardSolution( user, server, ticketIssuer, solution, url
   ) @ #t06) ∧
  (TiSignBlindedTokens( ticketIssuer, solution, secr_key,
                        signedBlTok, signedBlTok1, signedBlTok2
   ) @ #t07) ∧
  (SrvForwardSignedBlindedTokens( server, user, c, s ) @ #t08) ∧
  (UsrStoreUnblindedTokens( user, server, t1, t2, t3, unblinded,
                            unblinded1, unblinded2, Y
   ) @ #t09) ∧
  (UsrSendRequest( user, server, request1, t1 ) @ #t10) ∧
  (SrvPresentNewChallenge( server, user, newchallenge ) @ #t11) ∧
  (UsrSendStoredToken( user, server, t1, unblinded ) @ #t12) ∧
  (SrvForwardStoredToken( server, ticketIssuer, t1 ) @ #t13) ∧
  (TiVerifySignedToken( ticketIssuer, t1, secr_key ) @ #t14) ∧
  (SrvSendNewResource( server, user, newRes1, t1 ) @ #t15) ∧
  (UsrReceivedNewResource( user, server, request1, t1, newRes1
   ) @ #t16) ∧
  (UsrSendRequest( user, server, request2, t2 ) @ #t17) ∧
  (UsrReceivedNewResource( user, server, request2, t2, newRes2
   ) @ #t18) ∧
  (UsrSendRequest( user, server, request3, t3 ) @ #t19) ∧
  (UsrReceivedNewResource( user, server, request3, t3, newRes3
   ) @ #t20)
 ∧
  (#t00 < #t01) ∧
  (#t01 < #t02) ∧
  (#t02 < #t03) ∧
  (#t03 < #t04) ∧
  (#t04 < #t05) ∧
  (#t05 < #t06) ∧
  (#t06 < #t07) ∧
  (#t07 < #t08) ∧
  (#t08 < #t09) ∧
  (#t09 < #t10) ∧
  (#t10 < #t11) ∧
  (#t11 < #t12) ∧
  (#t12 < #t13) ∧
  (#t13 < #t14) ∧
  (#t14 < #t15) ∧
  (#t15 < #t16) ∧
  (¬(request1 = request2)) ∧
  (¬(request1 = request3)) ∧
  (¬(request2 = request3)) ∧
  (∀ x #i #j. (Unique( x ) @ #i) ∧ (Unique( x ) @ #j) ⇒ #i = #j) ∧
  (∀ x #c.1. (Rev( x, 'secureChannel' ) @ #c.1) ⇒ ⊥)"
*/
by sorry







































































/*
WARNING: the following wellformedness checks failed!

Derivation Checks
=================

  Derivation checks timed out. Use --derivcheck-timeout=INT to configure timeout, 0 to deactivate.
*/

/*
Generated from:
Tamarin version 1.8.0
Maude version 2.7.1
Git revision: UNKNOWN, branch: UNKNOWN
Compiled at: 2023-08-30 13:15:41.590881948 UTC
*/

end